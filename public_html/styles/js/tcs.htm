/**
 * Dinh nghia cac bien toan cuc
 */
	var bgcolor1 = "#666666";
	var bgcolor2 = "#999999";
	var bgcolor3 = "#999999";
	var bordercolor1 = "#999999 #333333 #333333 #999999";
	var bordercolor2 = "#000000 #666666 #CCCCCC #333333";
	var fontcolor1 = "#FFFFFF";
	var fontcolor2 = "#000000";
	var fontcolor3 = "#FFFFFF";
	var fontcolor4 = "#FFFFFF";

	var newWindow = true;
	var strSeparatorArray= new Array("-"," ","/",".");
	var minYear=1000;
	var maxYear=3000;
	var arrContent= new Array();
	
	var usedAddData = true;	
	var curRow ;
	var curRow2 ;
	var key;
	var shift=0;
	var err;
	var OtherColor='#F0F0F0';
	var CurrentColor='#CCE3FF';
	var StartRow = 1;
	var itemIndex = -1;
	var EndRow = 100;
	var cTable;
	var cTable2;	
	var sodong=10;
	var preEl ;
	var orgBColor;
	var orgTColor;
	var out = new Object; 
	out['ok']='false';
	var arrKhoContent = new Array();
	var idname="idname";
	var lablename="lablename";
/*
	Bien xu ly Tab
*/	
	var activeColor = '#FFFFFF';
	var deactiveColor = '';
	
	var tabDisplay;
	var activeTab;	
        
/**************************************************************************************************************************************
* Cac ham hien thi
*/
/* Upper case truong hop dang nhap he thong*/
function textToUpper()
{
	var keycharUppercase;
	var keychar;
	if(window.event){ // IE
		keynum = event.keyCode;
		keychar = String.fromCharCode(keynum);
		keycharUppercase = keychar.toUpperCase();
		event.keyCode = keycharUppercase.charCodeAt(0);
	}	
	return true;
}
//Ham quay lai
function Back() {
	if (window.history.length > 0) {
		window.history.go(-1);
	} else {
		window.close();
	}	
}
//Ham xoa du lieu 
function clearName(ma,ten)
{
	if(ma.value == '')
	{
		ten.value = '';
	}
}
/** 
* Cac ham hien thi thong bao
* Tham so: Message thong bao toi nguoi su dung!
*/	
function showError(msgErr){
	alert(msgErr);
}

function showInfor(msgErr){
    var sURL = "../Error.jsp";
	var arg = msgErr;
	window.showModalDialog(sURL,arg,"dialogWidth:430px;dialogHeight:205px;Help:no;scroll:no;resizable=no;center=yes;status:no");
}

function showWarning(msgErr){	
    var sURL = "../Error.jsp";
	var arg = msgErr;
	window.showModalDialog(sURL,arg,"dialogWidth:430px;dialogHeight:205px;Help:no;scroll:no;resizable=no;center=yes;status:no");
}

function showConfirm(msgConfirm){	
    var sURL = "../Error.jsp";
	var arg = msgConfirm;
	var returnValue = window.showModalDialog(sURL,arg,"dialogWidth:430px;dialogHeight:205px;Help:no;scroll:no;resizable=no;center=yes;status:no");
	if(returnValue=='OK') return 1;
	else return 0;
}

//popup danh muc chuan
function newWindow(file,window) {
    msgWindow=open(file,window,'resizable=no,width=650,height=480,titlebar=no,toolbar=no,scrollbars=yes,top=0,left=0');
    if (msgWindow.opener == null) msgWindow.opener = self;
}

//Open Register, Law
function newWindow600500(file,window) {			
    msgWindow=open(file,window,'resizable=no,width=600,height=500,titlebar=no,toolbar=no,scrollbars=yes,top=0,left=0');
    if (msgWindow.opener == null) msgWindow.opener = self;
}

/**
 * Popup danh cho danh muc
 */
function newWindow650480(file,window) {
    msgWindow=open(file,window,'resizable=no,width=650,height=480,titlebar=no,toolbar=no,scrollbars=yes,top=0,left=0');
    if (msgWindow.opener == null) msgWindow.opener = self;
}
/**
 * Popup danh cho danh muc
 */
function newWindow20110521(file,window) {	
    msgWindow=open(file,window,'resizable=yes,width=650,height=480,titlebar=no,toolbar=no,scrollbars=yes,top=0,left=0');
    if (msgWindow.opener == null) msgWindow.opener = self;
}
/**
 * Popup danh cho test
 */
function newModalDialog(file, myArguments) {	
	window.showModalDialog(file, myArguments , "dialogWidth:430px;dialogHeight:205px;Help:no;scroll:no;resizable=no;center=yes;status:no");    
}
/**
 * Popup dung cho Print chung tu
 * @param file
 * @param window
 */
function newWindow1280710(file,window) {
    msgWindow=open(file,window,'resizable=no,width=1280,height=710s,titlebar=no,toolbar=no,scrollbars=yes,top=0,left=0,status=no');
    if (msgWindow.opener == null) msgWindow.opener = self;
}
/**
 * Popup dung cho view chung tu
 * @param file
 * @param window
 */
function newWindow800900(file,window) {
    msgWindow=open(file,window,'resizable=no,width=800,height=900,titlebar=no,toolbar=no,scrollbars=yes,top=0,left=0');
    if (msgWindow.opener == null) msgWindow.opener = self;
}

function tooltip_field(field){
    document.getElementById(""+field+"").title=document.getElementById(""+field+"").value;
}

   
function numbersonly(myfield, e, dec)
{
	
	var key;
	var keychar;

	if (window.event)
	key = window.event.keyCode;
	else if (e)
		key = e.which;
	else
		return true;
	keychar = String.fromCharCode(key);

	// control keys
	if ((key==null) || (key==0) || (key==8) ||
	(key==9) || (key==13) || (key==27) )
	return true;
	
	// numbers
	else if ((("0123456789").indexOf(keychar) > -1))
	return true;
	
	// decimal point jump
	else if (dec && (keychar == "."))
	{
	myfield.form.elements[dec].focus();
	return false;
	}
	else
	return false;
}

//20171102 - thuongdt bo sung cho phep nhap so am
function numbersonly_soam(myfield, e, dec)
{
	var vmyfield = myfield.value;
	var key;
	var keychar;

	if (window.event)
	key = window.event.keyCode;
	else if (e)
		key = e.which;
	else
		return true;
	keychar = String.fromCharCode(key);
	// control keys
	if ((key==null) || (key==0) || (key==8) ||
	(key==9) || (key==13) || (key==27) || (key==45))
	return true;
	
	// numbers
	else if ((("0123456789").indexOf(keychar) > -1))
	return true;
	
	// decimal point jump
	else if (dec && (keychar == "."))
	{
	myfield.form.elements[dec].focus();
	return false;
	}
	else
	return false;
}
function numberBlockKey(){
	if (event.keyCode < 48 || event.keyCode > 57 )
        event.returnValue = false;
	else
        {
          event.returnValue = true;
        }
	if (event.keyCode==13) event.returnValue=true;

   }
function numberBlockKey1(){     
	//if (event.keyCode < 44 ||event.keyCode== 45||event.keyCode== 46||event.keyCode== 47||event.keyCode > 57 )
  if (event.keyCode < 44 ||event.keyCode== 45||event.keyCode== 47||event.keyCode > 57 )
        event.returnValue = false;
	else{
    event.returnValue = true;
  }
	if (event.keyCode==13) event.returnValue=true;
}
function numberBlockKey2(){        
	if (event.keyCode < 44 ||event.keyCode== 47||event.keyCode > 57 )
        event.returnValue = false;
	else
        {
          event.returnValue = true;
        }
	if (event.keyCode==13) event.returnValue=true;

 }
 //,=44|.=46
function numberBlockKeySoTien(obj, ma_nt){
  //{manhnv-20150731-cho phep nhap so tien am  
  if(event.keyCode == 45){
    if(obj.value == '' || obj.value == '0'){      
      event.returnValue = true;
    }else{
      event.returnValue = false;
    }
  }else{
     event.returnValue = false;
  }  
  //}manhnv-20150731

  if(ma_nt == 'VND' || ma_nt == '177'){
    if ((event.keyCode < 48 ||event.keyCode > 57) && event.keyCode != 45){
     event.returnValue = false;
    }else{ 
      if(event.keyCode != 45){
        event.returnValue = true;
      }
    }    
  }else{    
    if(obj.value.indexOf(".") > 0){
      if ((event.keyCode <= 47 || event.keyCode > 57) && event.keyCode != 45){
        event.returnValue = false;
      }else{ 
        if(event.keyCode != 45){
          event.returnValue = true;
        }
      }
    }else{
      if (event.keyCode <= 44 || event.keyCode== 47 || event.keyCode > 57 ){
          event.returnValue = false;
      }else{ 
        if(event.keyCode != 45){
          event.returnValue = true;
        }
      }
    }    
  }
  if (event.keyCode==13) event.returnValue=true;
} 
function dateBlockKey(str,textbox,loc,delim){
	if (event.keyCode < 47 || event.keyCode > 57 )
        event.returnValue = false;
	else
        event.returnValue = true;
	if (event.keyCode==13) event.returnValue=true;
    if(str.length>0)
          {
            var locs = loc.split(',');
            for (var i = 0; i <= locs.length; i++)
            {
            	for (var k = 0; k <= str.length; k++){
            		if (k == locs[i])
            			{
					            if (str.substring(k, k+1) != delim){
					            	str = str.substring(0,k) + delim + str.substring(k,str.length);
					          	}
          				}
         		}
         	}
         textbox.value = str;
      }
   }
function locktextbox()
   {       
	if (event.keyCode >0 )
        event.returnValue = false;
   }
function validCharacters(eObject, eMsgArea, eMsgID) {
   //Changes due to CR 9668 - BEGIN
	var aInvalidChars = new Array('~', '"', '!','%','^', '&', '*', '+', '=', '}', '{', '[', ']', '|', '\\', ':', '<', '>');
	//  var aInvalidChars = new Array('"','<', '>');
	//Changes due to CR 9668 - END
	var sValue        = eObject.value;
	var sInvalids = '';

	for (var i = 0; i < aInvalidChars.length; i++) {
		if (sValue.indexOf(aInvalidChars[i]) > -1) {
			sInvalids = sInvalids + aInvalidChars[i];
		}
	}

	if (sInvalids.length > 0) {
		displayMessage('COMM', 1106, formatJSString(sValue), sInvalids);
		return false;
	} else {
		return true;
	}
}

//-------------------------------------------------------------------------
//              Create by : ToanND3
//				blockKeySpecial(e) [11/04/2008]
//				<input onkeypress="return blockKeySpecial(event);">

//---------------------------------------------------------------------------

function blockKeySpecial(e)
{
	var key;	

	if(window.event) // IE
	{
		key = e.keyCode;
	}
	else if(e.which) // Netscape/Firefox/Opera
	{
		key = e.which;
	}        
        if(key==37||key==38||key==39||key==40||key==16	//arrow key
		||key==35||key==36||key==9					//home,end,tab
		||key==46||key==45||key==8					//del,insert,backspace
		||(key>31 && key<48)||(key > 57&& key < 65)||(key  >90 && key<97)||( key >123 && key <127))//Cac ki tu dac biet
            event.returnValue = false;
}


function blockKeySpecialandNumber(e)
{
	var key;	

	if(window.event) // IE
	{
		key = e.keyCode;
	}
	else if(e.which) // Netscape/Firefox/Opera
	{
		key = e.which;
	}        
        if(key==37||key==38||key==39||key==40||key==16	//arrow key
		||key==35||key==36||key==9					//home,end,tab
		||key==46||key==45||key==8					//del,insert,backspace
		||(key>31 && key<48)||(key > 57&& key < 65)||(key  >90 && key<97)||( key >123 && key <127)||( key >47 && key <58))//Cac ki tu dac biet
            event.returnValue = false;
}

function blockKeySpecialandCharacter(e)
{
	var key;	

	if(window.event) // IE
	{
		key = e.keyCode;
	}
	else if(e.which) // Netscape/Firefox/Opera
	{
		key = e.which;
	}        
        if(key==37||key==38||key==39||key==40||key==16	//arrow key
		||key==35||key==36||key==9					//home,end,tab
		||key==46||key==45||key==8					//del,insert,backspace
		||(key>31 && key<48)||(key > 57&& key < 65)||(key  >90 && key<97)||( key >123 && key <127)||( key >64 && key <91) || ( key >96 && key <123))//Cac ki tu dac biet
            event.returnValue = false;
}
function blockKeySpecialandNumber1(e)
{
	var key;	

	if(window.event) // IE
	{
		key = e.keyCode;
	}
	else if(e.which) // Netscape/Firefox/Opera
	{
		key = e.which;
	}        
        if(key==37||key==38||key==39||key==40||key==16	//arrow key
		||key==35||key==36||key==9||key==45||key==47||key==8 	||key==46				//del,insert,backspace
		||(key>31 && key<44)||(key > 57&& key < 65)||(key  >90 && key<97)||( key >123 && key <127)||( key >64 && key <91) ||( key >96 && key <123) )//Cac ki tu dac biet
            event.returnValue = false;
}

/*
*   obj: this
*   y: maxlength
*   e:event
*/
function nextTab(obj,y,e){		
    var key;	
    var value = obj.value;
	if(window.event) // IE
	{
		key = e.keyCode;
	}
	else if(e.which) // Netscape/Firefox/Opera
	{
		key = e.which;
	}
    if (y==value.length)
      {
      var next=obj.tabIndex;  
      if (next<document.forms[0].elements.length && !document.forms[0].elements[next].readOnly)
        { 
          document.forms[0].elements[next].focus();         
        }
      }
}
/**
 * Cac ham tien ich
 */

function selectRow(rowId)
{ 
	if (lastSelectedRow != null) 
        lastSelectedRow.setAttribute("bgColor", "#FFFFFF");
	row = document.getElementById("rowId" + rowId);
	row.setAttribute("bgColor", "lightblue");
	lastSelectedRow = row;
	document.all.selectedIndex.value = rowId;
}
/*
 * Select multi Row 
 */
function selectRows(){
    var data=false;
    var upbound=document.forms[0].elements.length;
    for (i=0;i<upbound;i++){
        var temp=document.forms[0].elements[i].name;
        if (temp=='delete_id'&&(document.forms[0].elements[i].checked)){
            data=true;
        }
    }
    if (!data){
        alert('Cần ch�?n một bản ghi!');
        return false;   
    }
    return data;
}
/*
 * Confirm Delete Row 
 */
function deleteRow(){
    var data=false;
    var upbound=document.forms[0].elements.length;
    for (i=0;i<upbound;i++){
        var temp=document.forms[0].elements[i].name;
        if (temp=='delete_id'&&(document.forms[0].elements[i].checked)){
            data=true;
        }
    }
    if (!data){
        alert('Ch�?n một bản ghi cần xóa!');
        return false;   
    }else{
      if(confirm('Bạn có chắc chắn xóa không?')==false)
		return false;
    	    else{
                document.forms[0].__action.value="delete";
		document.forms[0].submit();
            }
    }
}

function CheckSoTaiKhoan(obj){
		var tk = trim(obj.value);
		if(tk==''){									
			return;
		}
		var tk_split = tk.split(".");
		for(v_tk=0;v_tk<tk_split.length;v_tk++){										
			if(tk_split[v_tk] == ''){
				if(v_tk == 0 ){
					
						alert("Số tài khoản bạn nhập không hợp lệ");	
						obj.focus();											
						return;
				}
				if(v_tk<tk_split.length-1){
					if(tk_split[v_tk++] == ''){
						alert("Số tài khoản bạn nhập không hợp lệ");
						obj.focus();
						return;
					}
				}
				if(v_tk==tk_split.length-1){
					alert("Số tài khoản bạn nhập không hợp lệ");
					obj.focus();
					return;
				}
			}							
			
		}								
	}

   
    
//Ham nay dung de add va remove row cua table dong
function addDetailRow(){
    var tbl = document.getElementById('tblGridDetailTable');
    var lastRow = tbl.rows.length;
    var tabrow=47;        
   
    if(parseFloat(lastRow)>1){
        tabrow+=(lastRow-2)*8;
    }            
    //Lay dong dau tien de copy
    var root = document.getElementById('tblGridDetailTable').getElementsByTagName('tr')[1].parentNode;        
    var obj = root.getElementsByTagName('tr')[1].cloneNode(true);
    
    //Dat lai cac ham javascript
    obj.getElementsByTagName('td')[0].innerHTML=obj.getElementsByTagName('td')[0].innerHTML.replace("tabIndex=39","tabIndex="+tabrow+"");
    obj.getElementsByTagName('td')[1].innerHTML=obj.getElementsByTagName('td')[1].innerHTML.replace("tabIndex=40","tabIndex="+(tabrow+1)+"");
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("tabIndex=41","tabIndex="+(tabrow+2)+"");
    obj.getElementsByTagName('td')[3].innerHTML=obj.getElementsByTagName('td')[3].innerHTML.replace("tabIndex=42","tabIndex="+(tabrow+3)+"");
    obj.getElementsByTagName('td')[4].innerHTML=obj.getElementsByTagName('td')[4].innerHTML.replace("tabIndex=43","tabIndex="+(tabrow+4)+"");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("tabIndex=44","tabIndex="+(tabrow+5)+"");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("tabIndex=45","tabIndex="+(tabrow+6)+"");
    obj.getElementsByTagName('td')[7].innerHTML=obj.getElementsByTagName('td')[7].innerHTML.replace("tabIndex=46","tabIndex="+(tabrow+7)+"");       
    obj.getElementsByTagName('td')[8].innerHTML=obj.getElementsByTagName('td')[8].innerHTML.replace("tabIndex=47","tabIndex="+(tabrow+8)+"");        
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("cal_noidung(0)","cal_noidung("+(lastRow-1)+")");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");   
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("calculateTLPC(this)","calculateTLPC(this)");   
    
    //Them dong vao table
    root.appendChild(obj);      

    document.forms[0].ttct_chuong[(lastRow-1)].readOnly = false;
    document.forms[0].ttct_chuong[(lastRow-1)].style.backgroundColor = "#FFFFFF";
    document.forms[0].ttct_noidungkt[(lastRow-1)].readOnly = false;
    document.forms[0].ttct_noidungkt[(lastRow-1)].style.backgroundColor = "#FFFFFF";
    
    document.forms[0].ttct_noidungkt[(lastRow-1)].value="";
    document.forms[0].ttct_tlpc[(lastRow-1)].value="";   
    document.forms[0].ttct_noidung[(lastRow-1)].value="";    
    document.forms[0].ttct_tien_nt[(lastRow-1)].value="";
    document.forms[0].ttct_tien[(lastRow-1)].value="";       
	document.forms[0].ttct_noidungkt[(lastRow-1)].focus();
}  
function addDetailRow_KHTK(){
    var tbl = document.getElementById('tblGridDetailTable');
    var lastRow = tbl.rows.length;
    var tabrow=47;        
   
    if(parseFloat(lastRow)>1){
        tabrow+=(lastRow-2)*8;
    }            
    //Lay dong dau tien de copy
    var root = document.getElementById('tblGridDetailTable').getElementsByTagName('tr')[1].parentNode;        
    var obj = root.getElementsByTagName('tr')[1].cloneNode(true);
    
    //Dat lai cac ham javascript
    obj.getElementsByTagName('td')[0].innerHTML=obj.getElementsByTagName('td')[0].innerHTML.replace("tabIndex=39","tabIndex="+tabrow+"");
    obj.getElementsByTagName('td')[1].innerHTML=obj.getElementsByTagName('td')[1].innerHTML.replace("tabIndex=40","tabIndex="+(tabrow+1)+"");
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("tabIndex=41","tabIndex="+(tabrow+2)+"");
    obj.getElementsByTagName('td')[3].innerHTML=obj.getElementsByTagName('td')[3].innerHTML.replace("tabIndex=42","tabIndex="+(tabrow+3)+"");
    obj.getElementsByTagName('td')[4].innerHTML=obj.getElementsByTagName('td')[4].innerHTML.replace("tabIndex=43","tabIndex="+(tabrow+4)+"");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("tabIndex=44","tabIndex="+(tabrow+5)+"");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("tabIndex=45","tabIndex="+(tabrow+6)+"");
    obj.getElementsByTagName('td')[7].innerHTML=obj.getElementsByTagName('td')[7].innerHTML.replace("tabIndex=46","tabIndex="+(tabrow+7)+"");       
    obj.getElementsByTagName('td')[8].innerHTML=obj.getElementsByTagName('td')[8].innerHTML.replace("tabIndex=47","tabIndex="+(tabrow+8)+"");        
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("cal_noidung(0)","cal_noidung("+(lastRow-1)+")");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");   
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("calculateTLPC(this)","calculateTLPC(this)");   
    
    //Them dong vao table
    root.appendChild(obj);  
    document.forms[0].ttct_chuong[(lastRow-1)].style.backgroundColor = "#FFFFFF";
    document.forms[0].ttct_chuong[(lastRow-1)].readOnly = false;
    document.forms[0].ttct_noidungkt[(lastRow-1)].value="";
    document.forms[0].ttct_tlpc[(lastRow-1)].value="";   
    document.forms[0].ttct_noidung[(lastRow-1)].value="";    
    document.forms[0].ttct_tien_nt[(lastRow-1)].value="";
    document.forms[0].ttct_tien[(lastRow-1)].value="";       
	document.forms[0].ttct_chuong[(lastRow-1)].focus();
}  
//Ham nay dung de add va remove row cua table dong
function addDetailRowForQuery(chuong, ndkt, ten_ndkt, tien){	
	
	var tbl = document.getElementById('tblGridDetailTable');
    var lastRow = tbl.rows.length;
    var tabrow=47;        
   
    if(parseFloat(lastRow)>1){
        tabrow+=(lastRow-2)*8;
    }            
    //Lay dong dau tien de copy
    var root = document.getElementById('tblGridDetailTable').getElementsByTagName('tr')[1].parentNode;        
    var obj = root.getElementsByTagName('tr')[1].cloneNode(true);
    
    
     //Dat lai cac ham javascript
    obj.getElementsByTagName('td')[0].innerHTML=obj.getElementsByTagName('td')[0].innerHTML.replace("tabIndex=39","tabIndex="+tabrow+"");
    obj.getElementsByTagName('td')[1].innerHTML=obj.getElementsByTagName('td')[1].innerHTML.replace("tabIndex=40","tabIndex="+(tabrow+1)+"");
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("tabIndex=41","tabIndex="+(tabrow+2)+"");
    obj.getElementsByTagName('td')[3].innerHTML=obj.getElementsByTagName('td')[3].innerHTML.replace("tabIndex=42","tabIndex="+(tabrow+3)+"");
    obj.getElementsByTagName('td')[4].innerHTML=obj.getElementsByTagName('td')[4].innerHTML.replace("tabIndex=43","tabIndex="+(tabrow+4)+"");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("tabIndex=44","tabIndex="+(tabrow+5)+"");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("tabIndex=45","tabIndex="+(tabrow+6)+"");
    obj.getElementsByTagName('td')[7].innerHTML=obj.getElementsByTagName('td')[7].innerHTML.replace("tabIndex=46","tabIndex="+(tabrow+7)+"");       
    obj.getElementsByTagName('td')[8].innerHTML=obj.getElementsByTagName('td')[8].innerHTML.replace("tabIndex=47","tabIndex="+(tabrow+8)+"");        
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("cal_noidung(0)","cal_noidung_(this)");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");   
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("calculateTLPC(this)","calculateTLPC(this)");      
    
    //Them dong vao table
    root.appendChild(obj);  
    document.forms[0].ttct_chuong[(lastRow-1)].style.backgroundColor = "#FFFFFF";
    document.forms[0].ttct_chuong[(lastRow-1)].readOnly = false;
	document.forms[0].ttct_chuong[(lastRow-1)].value=chuong;	
    document.forms[0].ttct_noidungkt[(lastRow-1)].value=ndkt;
    document.forms[0].ttct_noidung[(lastRow-1)].value=ten_ndkt;
    document.forms[0].ttct_tien_nt[(lastRow-1)].value=tien;
    document.forms[0].ttct_tien[(lastRow-1)].value=tien;    
   
}      
//Ham nay dung de add va remove row cua table dong
function OpenerAddDetailRowForQuery(chuong, ndkt, ten_ndkt, tien, ky_thue){	
	
	var tbl = opener.document.getElementById('tblGridDetailTable');
    var lastRow = tbl.rows.length;
    var tabrow=47;        
   
    if(parseFloat(lastRow)>1){
        tabrow+=(lastRow-2)*8;
    }            
    //Lay dong dau tien de copy
    var root = opener.document.getElementById('tblGridDetailTable').getElementsByTagName('tr')[1].parentNode;        
    var obj = root.getElementsByTagName('tr')[1].cloneNode(true);
    
    
     //Dat lai cac ham javascript
    obj.getElementsByTagName('td')[0].innerHTML=obj.getElementsByTagName('td')[0].innerHTML.replace("tabIndex=39","tabIndex="+tabrow+"");
    obj.getElementsByTagName('td')[1].innerHTML=obj.getElementsByTagName('td')[1].innerHTML.replace("tabIndex=40","tabIndex="+(tabrow+1)+"");
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("tabIndex=41","tabIndex="+(tabrow+2)+"");
    obj.getElementsByTagName('td')[3].innerHTML=obj.getElementsByTagName('td')[3].innerHTML.replace("tabIndex=42","tabIndex="+(tabrow+3)+"");
    obj.getElementsByTagName('td')[4].innerHTML=obj.getElementsByTagName('td')[4].innerHTML.replace("tabIndex=43","tabIndex="+(tabrow+4)+"");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("tabIndex=44","tabIndex="+(tabrow+5)+"");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("tabIndex=45","tabIndex="+(tabrow+6)+"");
    obj.getElementsByTagName('td')[7].innerHTML=obj.getElementsByTagName('td')[7].innerHTML.replace("tabIndex=46","tabIndex="+(tabrow+7)+"");       
    obj.getElementsByTagName('td')[8].innerHTML=obj.getElementsByTagName('td')[8].innerHTML.replace("tabIndex=47","tabIndex="+(tabrow+8)+"");        
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("cal_noidung(0)","cal_noidung("+(lastRow-1)+")");
    obj.getElementsByTagName('td')[5].innerHTML=obj.getElementsByTagName('td')[5].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");
    obj.getElementsByTagName('td')[6].innerHTML=obj.getElementsByTagName('td')[6].innerHTML.replace("cal_sotien(0)","cal_sotien("+(lastRow-1)+")");   
    obj.getElementsByTagName('td')[2].innerHTML=obj.getElementsByTagName('td')[2].innerHTML.replace("calculateTLPC(this)","calculateTLPC(this)");      
    
    //Them dong vao table
    root.appendChild(obj);  
    opener.document.forms[0].ttct_chuong[(lastRow-1)].style.backgroundColor = "#F0F0F0";;
    opener.document.forms[0].ttct_chuong[(lastRow-1)].readOnly = true;
    opener.document.forms[0].ttct_chuong[(lastRow-1)].value=chuong;	
    opener.document.forms[0].ttct_noidungkt[(lastRow-1)].value=ndkt;
    opener.document.forms[0].ttct_noidung[(lastRow-1)].value=ten_ndkt;
    opener.document.forms[0].ttct_tien_nt[(lastRow-1)].value=tien;
    opener.document.forms[0].ttct_tien[(lastRow-1)].value=tien;    
    opener.document.forms[0].ttct_ky_thue[(lastRow-1)].value = ky_thue;
   
}      
function removeDetailRow(src)
{ 		
	var oRow = src.parentElement.parentElement;
        if(parseFloat(oRow.rowIndex)>1){
            document.all("tblGridDetailTable").deleteRow(oRow.rowIndex);           
            cal_tongtien_nt();
            cal_tongtien();
    }
}    
    
     
     
    
    
    function strStartsWith(str, prefix) {
    	return str.indexOf(prefix) === 0;
	}    
	
	 function checkTaiKhoan(field){
    var hthuc_thu = document.TcsLapChungTuForm.hthuc_thu.value;
    	if(hthuc_thu==1){
			var field_value=field.value.trim();
			if (field_value.length>0){
				if(field_value.length!=13){
						alert("Số tài khoản phải có 13 kí tự số VD: 1234567890123"); 
			            field.focus();
				}
			}else
				return;
		}
	}
     
      ///may ten thanh toan vien theo ma thanh toan vien
	function autoGetThanhToanVien(){
   		var ma =document.TcsDKLapBangKeChungTuForm.ma_ttv.value;               
        var objJSON = {"msg" : ma};
        var strJSON = encodeURIComponent(JSON.stringify(objJSON));
        new Ajax.Request("Load_TenThanhToanVien.do",
        {
          	method: "post",
          	async: false,
          	parameters: "strJSON=" + strJSON,
          	onSuccess: onSuccessNhanVien,
          	onError: onErrorNhanVien,
         	onLoading: onLoadingNhanVien
        });		
	   }
	   function autoGetTenNhanVienKq(){
		
   		var ma =document.TcsLapBangKePLTienMatForm.ma_Nv.value;			         
        var objJSON = {"msg" : ma};
        var strJSON = encodeURIComponent(JSON.stringify(objJSON));
        new Ajax.Request("Load_TenNhanVien.do",
        {
          	method: "post",
          	async: false,
          	parameters: "strJSON=" + strJSON,
          	onSuccess: onSuccessNhanVienKq,
          	onError: onErrorNhanVien,
         	onLoading: onLoadingNhanVien
        });
	   }
	   	
	   function onLoadingNhanVien(){}
	   function onErrorNhanVien(){	alert("Error");	}			  	
	  	
	   function onSuccessNhanVien(req){    		 	     
	     	var jsonExpression = "(" + req.responseText + ")";        
	     	temp_nhanvien = eval(jsonExpression);
           
	     	document.TcsDKLapBangKeChungTuForm.ten_ttv.value = temp_nhanvien.ten_ttv;
	     	if(document.TcsDKLapBangKeChungTuForm.ten_ttv.value=="null"){
	     		document.TcsDKLapBangKeChungTuForm.ten_ttv.value="";
	     	}
	   }
	    function onSuccessNhanVienKq(req){    		 	     
	     	var jsonExpression = "(" + req.responseText + ")";        
	     	temp_nhanvien = eval(jsonExpression);
	     	
           
	     	document.TcsLapBangKePLTienMatForm.ten_Nv.value = temp_nhanvien.ten_Nv;
	     	if(document.TcsLapBangKePLTienMatForm.ten_Nv.value=="null"){
	     		document.TcsLapBangKePLTienMatForm.ten_Nv.value="";
	     	}
	   }
	function StringBuffer() {
	    this.__strings__ = new Array;
	}

	StringBuffer.prototype.append = function (str) {
	    this.__strings__.push(str);
	};

	StringBuffer.prototype.toString = function () {
	    return this.__strings__.join("");
	};
	
	//Ham phuc vu cho format tien
function toFormatNumberVN_TCS(obj){				
		var ma_nte ;
		try {
			ma_nte = document.forms[0].ma_nt.value;
		}catch (e) {
			ma_nte = 'VND';
		}
		
		if(ma_nte == 'VND') {
			if(checkNumber_TCS(obj) == 0){
				return 0;
			}
			if((obj.value == '')||(obj.value == null)){
				return '';				
			}	
			obj.value = toFormatNumberDe_TCS(toNumber2(obj.value),2);
			return obj.value;
		}
		else {
			if(checkNumber_TCS(obj) == 0){				
				return 0;
			}
			if((obj.value == '')||(obj.value == null)){				
				return '';				
			}	
			try {
				if(obj.value.indexOf(',') >= 0)
				{
				
				}
				else
				{
					obj.value = toFormatNumberDe_TCS(toNumber2(obj.value),2);
				}
			}catch (e) {
				
			}
			return obj.value;
		}
		
}  
	function checkNumber_TCS(obj)
	{		
		
		if(isNumber_TCS(obj.value) == false)
		{							
			obj.value = '';
			obj.focus();
			return '';
		}				
		return 1;
	}
	function isNumber_TCS(inputVal) 
	{
		try{			
			inputVal = toNumber2(inputVal);	
		}catch (e) {
			return;
		}
		inputStr = inputVal.toString();		
		for (var i = 0; i < inputStr.length; i++) 
		{			
			var oneChar = inputStr.charAt(i);
			if ((oneChar < "0" || oneChar > "9") && oneChar != "." && oneChar != "-" && oneChar != ",") {
				return false;
			}
		}				
		return true;
	}
/**
* Ham : toFormatNumberDe_TCS() 
* Dinh dang 1 gia tri so theo dinh dang #,###.##. 
* 	pnumber : Gia tri so can format. 
* 	decimals : So chu so thap phan.
* Gia tri: So da duoc format 
* 
* Su dung: x = toFormatNumberDe_TCS(123,999, 2) 
*/ 
function toFormatNumberDe_TCS(pnumber,decimals) {
	
	var decimalCharacter = ' ';
	if (isNaN(pnumber))  
	{
		return ''; 
		
	}
	if (pnumber == 0 || pnumber == '0') return '';	

	var snum = new String(pnumber); 	
	var sec = snum.split(decimalCharacter); 
	var arg = toFormatNumberDe_TCS.arguments;

	
	var whole = parseFloat(sec[0]); 
	var result = ''; 
	var temp = ''; 	
	if (decimals!=0) { 		
		if(sec.length > 1){ 
			var dec = new String(sec[1]); 
			dec = String(parseFloat(sec[1])/Math.pow(10,(dec.length - decimals))); 
			dec = String(whole + Math.round(parseFloat(dec))/Math.pow(10,decimals)); 
			var dot = dec.indexOf(decimalCharacter); 
			if(dot == -1){ 
				dec += decimalCharacter;
				for(i=1;i<=decimals;i++) { dec += '0'; }
			} 
			result = dec; 
		} else{ 
			result = whole;
		} 
	} else {
		result = whole;
	}; 
	snum = String(result); 
	sec = snum.split(decimalCharacter); 
	result=sec[0];		
	if (sec[0].length > 3) {
		dec = sec[0]; 
		pos = dec.length%3;
		temp = dec.substr(0, pos);
		dec = dec.substr(pos,dec.length);
		pos = (dec.length - pos)/3;		
		for(i=0;i<pos;i++) { 
			if (temp.length>0) temp = temp + decimalCharacter;
			temp += dec.substr(3*i,3); 
		} 		
		result= temp;
	}
	if (sec.length > 1) { 
	 	result += decimalCharacter;
		temp = sec[1];
		
		pos = temp.length;
		for(i=pos;i<decimals;i++){
			temp += "0";
		}
		result += temp;
	} else if (arg.length > 2) {
		result += decimalCharacter;
		
		for(i=0;i<arg[2];i++){
			result += '0';
		}
	} 			
	return result; 
} 





/*
 * Confirm Add Row 
 */
function addRow(){
    var data=false;
    var upbound=document.forms[0].elements.length;
    for (i=0;i<upbound;i++){
        var temp=document.forms[0].elements[i].name;
        if (temp=='add_id'&&(document.forms[0].elements[i].checked)){
            data=true;
        }
    }
    if (!data){
        alert('Ch�?n một bản ghi cần thêm!');
        return false;   
    }else{
        document.forms[0].__action.value="addnew";
        document.forms[0].submit();  
    }
}

 function sbExit()
	  {	 
	     if(confirm('Bạn có chắc chắn thoát kh�?i chức năng này?')==false)
            return false;
         else{             
            window.location="<%=request.getContextPath()%>"+"/Index.jsp";
         }
	  }

function setValueCheckAll(objName,allName){
				var selectObj = document.getElementsByName(objName);
				var all = document.getElementsByName(allName);
				if (typeof(selectObj)=='undefined') return;
			var count = 0;
			var len = selectObj.length;
			for (var i=0; i<len; i++){
				if(selectObj[i].checked ){
					count = count+1;		
				}
			}
			if(count==len){
				all[0].checked = true;
			}
			else{
				all[0].checked = false;
			}
}
		
	
	function CheckAll_(allname, objname)
      {
         var check_main = document.getElementsByName(allname);
         var check_box = document.getElementsByName(objname);
         for(var i = 0 ; i < check_box.length ; i++)
         {
            check_box(i).checked = check_main(0).checked ;
         }
      }
/*
 * Check All
 */
function CheckAll(){
      var upbound=document.forms[0].elements.length;
      for (i=0;i<upbound;i++){
          if (document.forms[0].C1.checked){
              var temp=document.forms[0].elements[i].name;
              var check=document.forms[0].elements[i].disabled;
              if (temp=='delete_id'&&!check)	
                 document.forms[0].elements[i].checked=true;             
          }else {
              var temp=document.forms[0].elements[i].name;
              if (temp=='delete_id')	
                 document.forms[0].elements[i].checked=false;            
          }
    }
}

	



function checkOption(arrOpt, checkedValue) {
	for (var i = 0; i < arrOpt.length; ++i) {
		if (arrOpt[i].value == checkedValue) {
			arrOpt[i].checked = true;
			break;
		}
	}
}
function selectList(lstObj, selectedValue) {
	var opt;
	for (var i = 0; i < lstObj.options.length; ++i) {
		opt = lstObj.options[i];
		if (opt.value == selectedValue) {
			opt.selected = true;
			break;
		}
	}
}
 
function disableTextField () {
	if (document.all || document.getElementById){
  		args=disableTextField.arguments; 
  		for (i=1;i<args.length;i++){
//    		args[i].disabled = true;
			args[i].readOnly = true;
			if (args[0]!=1) args[i].value="";
    	}
	}
}

function enableTextField () {
  if (document.all || document.getElementById){
	args=enableTextField.arguments; 
	for (i=0;i<args.length;i++){
    	args[i].readOnly = false;
	}  
  }
}

function setColor(rowID, pColor)
{
	if (typeof(rowID)=='undefined')return false;	
	var vcells = cTable.rows[rowID].cells;
	for (i=0; i< vcells.length;i++){
		var vElement = vcells[i].firstChild;
		if ((vElement.tagName=='INPUT') ||(vElement.tagName=='SELECT')){
			vElement.style.backgroundColor = pColor;
		}
	}
}

function ChangeTextColor(a_obj,a_color){  
	for (i=0;i<a_obj.cells.length;i++){
		a_obj.cells(i).style.color=a_color; 
	}
}




 

 function mask(str,textbox,loc,delim){ 
   var locs = loc.split(',');  
   
    for (var i = 0; i <= locs.length; i++){
    	for (var k = 0; k <= str.length; k++){
    		if (k == locs[i]){
    			if (str.substring(k, k+1) != delim){
    				str = str.substring(0,k) + delim + str.substring(k,str.length);
  				}
  			}
  		}
  	}
  textbox.value = str;
 } 
function generalmask(str,textbox,loc,delim){
	if(str.length>0)
	  {
	    var locs = loc.split(',');
	    for (var i = 0; i <= locs.length; i++)
	    {
	    	for (var k = 0; k <= str.length; k++)
	    	{
	    		if (k == locs[i])
	    		{
	    			if (str.substring(k, k+1) != delim)
	    			{
	    				str = str.substring(0,k) + delim + str.substring(k,str.length);
	    			}
	    		}
	    	}
	    }
	    textbox.value = str;
	  }
  }
function removechar(str,textbox){
   var ValidChars = '0123456789';
   var Char;
   var IsNumber = true;
   var result = '';

   if ( str.length >0) {
     for (i = 0; i < str.length; i++)
        {
        Char = str.charAt(i);
        if (ValidChars.indexOf(Char) == -1){
            IsNumber = false;
        } else {
            result = result + Char;
        }
     }
     if (IsNumber == false) {
        textbox.value = result;
        textbox.focus();
     }
   }
}
/**
 * ok
 * @param s
 * @returns
 */
function trim(s)
{
   var i;
   if (isNull(s)) return "";
   i = s.length-1;
   	while ( i>=0 && s.charAt(i) == ' ' ) i--;
    s = s.substring( 0, i+1 );
    i = 0;
    while ( i< s.length && s.charAt(i) == ' ') i++;
    return s.substring(i);
}      
/**
 * ok
 * @param s
 * @returns
 */
function trimAll(sString) 
{
	
    while (sString.substring(0,1) == ' ')
    {
        sString = sString.substring(1, sString.length);
    }
    while (sString.substring(sString.length-1, sString.length) == ' ')
    {
        sString = sString.substring(0,sString.length-1);
    }
    return sString;
}
/**********
/**
* Ham : toFormatNumberDe() 
* Dinh dang 1 gia tri so theo dinh dang #,###.##. 
* 	pnumber : Gia tri so can format. 
* 	decimals : So chu so thap phan.
* Gia tri: So da duoc format 
* Su dung: x = toFormatNumberDe(123,999, 2) 
*/ 
function toFormatNumberDe(pnumber,decimals){
	if (isNaN(pnumber))  return ''; 
	if (pnumber==0 || pnumber=='0') return '';
	if (isNull(pnumber)) return '';

	var snum = new String(pnumber); 
	var sec = snum.split('.'); 
	var arg = toFormatNumberDe.arguments;

	var whole = parseFloat(sec[0]); 
	var result = ''; 
	var temp = ''; 
	if (decimals!=0) { 
		if(sec.length > 1){ 
			var dec = new String(sec[1]); 
			dec = String(parseFloat(sec[1])/Math.pow(10,(dec.length - decimals))); 
			dec = String(whole + Math.round(parseFloat(dec))/Math.pow(10,decimals)); 
			var dot = dec.indexOf('.'); 
			if(dot == -1){ 
				dec += '.';
				for(i=1;i<=decimals;i++) { dec += '0'; }
			} 
			result = dec; 
		} else{ 
			result = whole;
		} 
	} else {
		result = whole;
	}; 
	snum = String(result); 
	sec = snum.split('.'); 
	result=sec[0];	
	if (sec[0].length > 3){
		dec = sec[0]; 
		pos = dec.length%3;
		temp = dec.substr(0, pos);
		dec = dec.substr(pos,dec.length);
		pos = (dec.length - pos)/3;
		for(i=0;i<pos;i++) { 
			if (temp.length>0) temp = temp + ',';
			temp += dec.substr(3*i,3); 
		} 
		result= temp;
	}
	
	if (sec.length > 1) { 
	 	result += '.';
		temp = sec[1];
		
		pos = temp.length;
		for(i=pos;i<decimals;i++){
			temp += "0";
		}
		result += temp;
	} else if (arg.length > 2) {
		result += '.';
		for(i=0;i<arg[2];i++){
			result += '0';
		}
	} 
	return result; 
}





/** 
* Ham: toFormatNumber()
* Dat format cho cac truong kieu so theo dinh dang #.### (0 chu so thap phan)
* 	pnumber: Gia tri so can format. 
* Gia tri:  Gia tri so da duoc format. 
* Su dung: x = toFormatNumber('123456');
*/
function toFormatNumber(pnumber){ 
	return toFormatNumberDe(pnumber,0)
}
function toNumber(pNumber){ 
	s =	new String(pNumber);
	while(s.indexOf(',')>=0)
		s = s.replace(',','');
	return s;
}
/**
 * Duoc dung trong lap chung tu
 * @param pNumber
 * @returns
 */
function toNumber1(pNumber){ 
	
	s =	new String(pNumber);
	while(s.indexOf('.')>=0)
		s = s.replace('.','');
  while(s.indexOf(',')>=0)
		s = s.replace(',','.');       
        
	return s;	
}
/** 
* Ham: toNumber2()
* Bo format cho cac truong kieu so, chuyen tu dang # ### ### ve dang  ######
* 	pNumber: Gia tri can convert
* Gia tri: Gia tri cua so theo dang #####
* Su dung: x = toNumber2('123 456');
*/
function toNumber2(pNumber){	
	s =	new String(pNumber);
	while(s.indexOf(' ')>=0)
		s = s.replace(' ','');
  while(s.indexOf('.')>=0)
		s = s.replace('.','');  
	return s;
}
/***************
* Cac ham lien quan den ngay thang
*/
function showDate() { 
	var time = new Date(); 
	var dd=time.getDate(); 
	var mm=time.getMonth()+1; 
	var yy=time.getYear() ;
	var temp = '';
	if (dd < 10) dd = '0' + dd;
	if (mm < 10) mm = '0' + mm;
	temp = dd + "/" + mm + "/" + yy ;
	document.write(temp); 
} 
function showNowDate() { 
	var time = new Date(); 
	var dd=time.getDate(); 
	var mm=time.getMonth()+1; 
	var yy=time.getFullYear();
	var temp = '';
	if (dd < 10) dd = '0' + dd;
	if (mm < 10) mm = '0' + mm;
	temp = dd + "/" + mm + "/" + yy ;
	return temp;
} 
function showNowDate_Month_Year() { 
	var time = new Date(); 
	var dd=time.getDate(); 
	var mm=time.getMonth()+1; 
	var yy=time.getYear() ;
	var temp = '';
	if (dd < 10) dd = '0' + dd;
	if (mm < 10) mm = '0' + mm;
	temp = mm + "/" + yy ;
	return temp;
}
function daysInFebruary (year){
    return (((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );
}

function DaysArray(n) {
	for (var i = 1; i <= n; i++) {
		this[i] = 31;
		if (i==4 || i==6 || i==9 || i==11) {this[i] = 30;}
		if (i==2) {this[i] = 29;}
   } 
   return this;
}

function lastYear(){
	var curDate=new Date();
	var year= curDate.getYear();
	var strDay= "31/12/"+year;
	return strDay;	
} 

/**
 *	Thu tuc lay ngay cuoi thang, quy, nam cua Date truyen vao
 *	
 *	@author:	XuanLT
 * 	@since:		16/06/2003
 * 	@param		Date		sDate: Ngay can lay ngay cuoi
 *			String 		Datescope: Nhan 3 gia tri "M", "Q", "Y" pham vi can lay ngay cuoi
 * 	@return		Date		Ngay cuoi  thang, quy, nam	 cua thang truyen vao
 * 					tuy thuoc vao gia tri cua Datescope la  "M", "Q" hay "Y"
 */
function LastdayOfMonth(sMonth, sYear)
{
	var 	nMonth = 0;
	var 	nYear = 0;
	var	nDay = 0;
	
	if (sMonth == '' || sYear == '') return 0;

	// Chuyen thang, nam sang dang so
	nMonth = parseInt(sMonth,10);
	nYear = parseInt(sYear,10);

	//---Check out of range errors
	if (nMonth == 4 || nMonth == 6 || nMonth == 9 || nMonth == 11 ) 
	{
		nDay = 30;
	}
	else if (nMonth == 2)
	{
		// Leap year
		if ( (nYear % 4 == 0) && (nYear % 100 != 0)) 
		{
			nDay = 29;
		}
		else
		{
			nDay = 28;
		}
	}
	else
	{
		nDay = 31;
	}
	
	return nDay;
}
function getLastday(sDate, sDatescope)
{
	// Khai bao bien luu ket qua tra ve
	var sDateOut = '';
	
	// Khai bao cac bien Temp
	var	iPos = 0;
	var	nDay = 0;
	var	sMonth = '';
	var	sYear = '';
	if (sDatescope == 'D')
	{
		sDateOut = sDate;
	}
	else if(sDatescope == 'M')
	{
		iPos = sDate.indexOf('/');

		sMonth = sDate.substring(0, iPos);
		sYear = sDate.substr(iPos + 1);

		// Goi ham tinh ngay cuoi thang
		nDay = LastdayOfMonth(sMonth, sYear);
		
		// Tong hop chuoi ngay thang ket qua
		sDateOut = nDay + '/' + sMonth + '/' + sYear;
	}
	else if (sDatescope == 'Q')
	{
		// Lay 'Quy' tu chuoi ngay thang truyen vao
		sMonth = sDate.substring(0, 2).toUpperCase();
		if (sMonth == 'Q1')
		{
			sDateOut = '31/03/' + sDate.substr(3);
		}
		else if (sMonth == 'Q2')
		{
			sDateOut = '30/06/' + sDate.substr(3);
		}
		else if (sMonth == 'Q3')
		{
			sDateOut = '30/09/' + sDate.substr(3);
		}
		else
		{
			sDateOut = '31/12/' + sDate.substr(3);
		}
	}
	else if (sDatescope == 'Y')
	{
		sDateOut = '31/12/' + sDate;
	}
	else return '';
	
	return sDateOut;
}

/**************************************************/
/**
 * 	Thu tuc lay ngay dau thang, quy, nam cua Date truyen vao
 *
 * 	@author:	XuanLT
 * 	@since:		16/06/2003
 * 	@param		Date	sDate: Ngay can lay ngay cuoi
 * 			String	Datescope: Nhan 3 gia tri "M", "Q", "Y" pham vi can lay ngay dau
 * 	@return		Date: 	Ngay dau  thang, quy, nam	 cua thang truyen vao 
 *				tuy thuoc vao gia tri cua Datescope la  "M", "Q" hay "Y"
*/
function getFirstday(sDate, sDatescope)
{
	// Khai bao bien luu ket qua tra ve
	var sDateOut = '';
	
	// Khai bao cac bien Temp
	var	iPos = 0;
	var	nDay = 0;
	var	sMonth = '';
	var	sYear = '';

	if (sDatescope == 'D')
	{
		sDateOut = sDate;
	}
	else if(sDatescope == 'M')
	{
		// Tong hop chuoi ngay thang ket qua
		sDateOut = '01/' + sDate;
	}
	else if (sDatescope == 'Q')
	{
		// Lay 'Quy' tu chuoi ngay thang truyen vao
		sMonth = sDate.substring(0, 2).toUpperCase();
		if (sMonth == 'Q1')
		{
			sDateOut = '01/01/' + sDate.substr(3);
		}
		else if (sMonth == 'Q2')
		{
			sDateOut = '01/04/' + sDate.substr(3);
		}
		else if (sMonth == 'Q3')
		{
			sDateOut = '01/07/' + sDate.substr(3);
		}
		else
		{
			sDateOut = '01/10/' + sDate.substr(3);
		}
	}
	else if (sDatescope == 'Y')
	{
		sDateOut = '01/01/' + sDate;
	}
	else return '';
	
	// Thiet lap gia tri cho doi tuong tren Form

	return sDateOut;
}


function toDate(sDate,sFormatMark) {
	var sDatetemp
	var values = sDate.split("/");
	var yr_num;
	var mo_num;
	var day_num;
	if ((sFormatMark.toUpperCase() == "DD/MM/YYYY") || (sFormatMark.toUpperCase() == "D")) {
		yr_num = values[2];
		mo_num = values[1]-1;
		day_num = values[0];
	} else if ((sFormatMark.toUpperCase() == "MM/YYYY") || (sFormatMark.toUpperCase() == "M")) {
		yr_num = values[1];
		mo_num = values[0]-1;
		day_num = 1;
	} else if ((sFormatMark.toUpperCase() == "Q/YYYY") || (sFormatMark.toUpperCase() == "Q")) {
		yr_num = values[1];
		values = values[0].split("Q");
		mo_num = (values[1] * 3 - 2) - 1;
		day_num = 1;
	} else if ((sFormatMark.toUpperCase() == "YYYY") || (sFormatMark.toUpperCase() == "Y")) {
		yr_num = values[0];
		mo_num = 0;
		day_num = 1;
	}
	return new Date(yr_num, mo_num, day_num);
}

function toChar(objDate,sFormatMark) {
	var sDate = "";
	var yr_num = objDate.getYear();
	var mo_num = objDate.getMonth();
	var day_num = objDate.getDate();
	var yr_str;
	var mo_str;
	var day_str;
	var q_str;
	
	if (day_num < 10) {
		day_str = "0" + day_num;
	} else{
		day_str = day_num;
	}
	if (mo_num < 9) {
		mo_str = "0" + (mo_num + 1);
	} else{
		mo_str = + (mo_num + 1);
	}
	if ((sFormatMark.toUpperCase() == "DD/MM/YYYY") || (sFormatMark.toUpperCase() == "D")) {
		sDate = day_str + "/" + mo_str + "/" + yr_num;
	} else if ((sFormatMark.toUpperCase() == "MM/YYYY") || (sFormatMark.toUpperCase() == "M")) {
		sDate = mo_str + "/" + yr_num;
	} else if ((sFormatMark.toUpperCase() == "YYYY") || (sFormatMark.toUpperCase() == "Y")) {
		sDate = yr_num;
	} else if ((sFormatMark.toUpperCase() == "Q/YYYY") || (sFormatMark.toUpperCase() == "Q")) {
		if (mo_num < 3)
			 q_str =1;
		else if (mo_num < 6)
			 q_str =2;
		else if (mo_num < 9)
			 q_str =3;
		else q_str =4;
		sDate = "Q" + q_str + "/" + yr_num;
	}
	return sDate
}

function changeDateFormat(sDate,sFormatIn, sFormatOut) {
	return (toChar(toDate(sDate, sFormatIn), sFormatOut));
}

function toDateFormat(sDate, sFormatOut) {
	
	return (changeDateFormat(sDate,'DD/MM/YYYY', sFormatOut));
}

function formatDate(sDate, sFormatOut) {
	var sFormatin;
	if (sDate==isDate(sDate))
		sFormatin = 'DD/MM/YYYY';
	else if (sDate==isMonth(sDate))
		sFormatin = 'MM/YYYY';
	else if (sDate==isQuarter(sDate))
		sFormatin = 'Q/YYYY';
	else if (sDate==isYear(sDate))
		sFormatin = 'YYYY';
		
	return (changeDateFormat(sDate, sFormatin, sFormatOut));
}

function addDays(dateIn, num)
{
	return (new	Date(dateIn.getYear(), dateIn.getMonth(), dateIn.getDate() + num));
}
function addMonths(dateIn, num)
{
	return (new	Date(dateIn.getYear(), dateIn.getMonth() + num , dateIn.getDate() ));
}
function addQuarters(dateIn, num)
{
	return (new	Date(dateIn.getYear(), dateIn.getMonth() + num * 3 , dateIn.getDate() ));
}
function addYears(dateIn, num)
{
	return (new	Date(dateIn.getYear() + num, dateIn.getMonth(), dateIn.getDate() ));
}

function addStrDate(sDate, num) {
	var sFormatin;
	var dateIn;
	if (sDate==isDate(sDate))
		dateIn = toChar(addDays(toDate(sDate, 'D'), num),'D');
	else if (sDate==isMonth(sDate))
		dateIn = toChar(addMonths(toDate(sDate, 'M'), num),'M');
	else if (sDate==isQuarter(sDate)){
		dateIn = toChar(addQuarters(toDate(sDate, 'Q'), num),'Q');
	}
	else if (sDate==isYear(sDate))
		dateIn = toChar(addYears(toDate(sDate, 'Y'), num),'Y');
		
	return dateIn;
}

/**************
 * Cac ham validate
*/

/** 
* Ham: isNull()
* Kiem tra Null
* 	pValue: Gia tri can kiem tra
* Gia tri: 
*	true - neu gia tri do null
*	false - neu gia tri not null
*/
/**
 * ok
 */
function isNull(pValue){	
	return ((trimAll(pValue)==null) || (trimAll(pValue) == ""));
}


function addCommas(nStr)
{
	nStr += '';
	x = nStr.split('.');
	x1 = x[0];
	x2 = x.length > 1 ? '.' + x[1] : '';
	var rgx = /(\d+)(\d{3})/;
	while (rgx.test(x1)) {
		x1 = x1.replace(rgx, '$1' + ',' + '$2');
	}
	return x1 + x2;
}
function addSeparatorsNF(nStr, inD, outD, sep)
{
	nStr += '';
	var dpos = nStr.indexOf(inD);
	var nStrEnd = '';
	if (dpos != -1) {
		nStrEnd = outD + nStr.substring(dpos + 1, nStr.length);
		nStr = nStr.substring(0, dpos);
	}
	var rgx = /(\d+)(\d{3})/;
	while (rgx.test(nStr)) {
		nStr = nStr.replace(rgx, '$1' + sep + '$2');
	}
	return nStr + nStrEnd;
}
function format_number(pnumber,decimals){
	if (isNaN(pnumber)) { return 0};
	if (pnumber=='') { return 0};
	
	var snum = new String(pnumber);
	var sec = snum.split('.');
	var whole = parseFloat(sec[0]);
	var result = '';
	
	if(sec.length > 1){
		var dec = new String(sec[1]);
		dec = String(parseFloat(sec[1])/Math.pow(10,(dec.length - decimals)));
		dec = String(whole + Math.round(parseFloat(dec))/Math.pow(10,decimals));
		var dot = dec.indexOf('.');
		if(dot == -1){
			dec += '.'; 
			dot = dec.indexOf('.');
		}
		while(dec.length <= dot + decimals) { dec += '0'; }
		result = dec;
	} else{
		var dot;
		var dec = new String(whole);
		dec += '.';
		dot = dec.indexOf('.');		
		while(dec.length <= dot + decimals) { dec += '0'; }
		result = dec;
	}	
	return result;
}
function isDDMM(dtStr){
	var dtCh= "*";
	if (dtStr == "") return true;
	var daysInMonth = DaysArray(12);

	for (var intElementNr = 0; intElementNr < strSeparatorArray.length; intElementNr++) {
		if (dtStr.indexOf(strSeparatorArray[intElementNr]) != -1) 
			dtCh = strSeparatorArray[intElementNr];
	}
	if (dtCh != "*") //neu co ky hieu phan cach
	{
		returndate = isDate(dtStr+ dtCh +"2000");
	}else
	{
		returndate = isDate(dtStr +"2000");
	}
	if(returndate !=false)
	{
		returndate=returndate.substr(0, 5);
	}
	return returndate;
}

function isDate(dtStr){
	var dtCh= "*";
	if (dtStr == "") return true;
	var daysInMonth = DaysArray(12);

	for (var intElementNr = 0; intElementNr < strSeparatorArray.length; intElementNr++) {
		if (dtStr.indexOf(strSeparatorArray[intElementNr]) != -1) 
			dtCh = strSeparatorArray[intElementNr];
	}
	if (dtCh != "*") //neu co ky hieu phan cach
	{
		var pos1=dtStr.indexOf(dtCh);
		var pos2=dtStr.indexOf(dtCh,pos1+1);
		if (pos1==-1 || pos2==-1){
			return false;
		}	
		var strDay=dtStr.substring(0,pos1);
		var strMonth=dtStr.substring(pos1+1,pos2);
		var strYear=dtStr.substring(pos2+1);
	}else	//khong co ky hieu phan cach
	{
		if (dtStr.length>5) {
			strDay = dtStr.substr(0, 2);
			strMonth = dtStr.substr(2, 2);
			strYear = dtStr.substr(4);
   		}
		else
			return false;
	}
	
	if (!isInteger(strYear) || !isInteger(strMonth) || !isInteger(strDay)) 
		return false;

	strYr=strYear;

	if (strDay.charAt(0)=="0" && strDay.length>1) 
		strDay=strDay.substring(1);
	
	if (strMonth.charAt(0)=="0" && strMonth.length>1) 
		strMonth=strMonth.substring(1);
	
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1);
	}
	
	month=parseInt(strMonth);
	day=parseInt(strDay);
	year=parseInt(strYr);

	if (strMonth.length<1 || month<1 || month>12){
		return false;
	}
	if (strDay.length<1 || day<1 || day>31 || (month==2 && day>daysInFebruary(year)) || day > daysInMonth[month]){
		return false;
	}
	
	if(year < 50 ) year += 2000;
	if(year >50 && year <1000) year += 1900;
	if (strYear.length < 1 || year==0 || year<minYear || year>maxYear){
		return false;
	}
	if (day<10) day = "0" + day;
	if (month<10) month = "0" + month;
	return "" + day + "/" + month + "/" + year;
}
function isMonth(dtStr){
	var dtCh= "*";
	if (dtStr == "") return "";
	var daysInMonth = DaysArray(12);
	
	for (var intElementNr = 0; intElementNr < strSeparatorArray.length; intElementNr++) {
		if (dtStr.indexOf(strSeparatorArray[intElementNr]) != -1) 
			dtCh = strSeparatorArray[intElementNr];
	}
	
	if (dtCh != "*") //neu co ky hieu phan cach
	{
		var pos1=dtStr.indexOf(dtCh);

		var strMonth=dtStr.substring(0,pos1);
		var strYear=dtStr.substring(pos1+1);
	}
	else	//khong co ky hieu phan cach
	{
		if (dtStr.length>3) {
			strMonth = dtStr.substr(0, 2);
			strYear = dtStr.substr(2);
   		}
		else
			return false;
	}

	if (!isInteger(strYear) || !isInteger(strMonth)) 
		return false;
	strYr=strYear;
	
	if (strMonth.charAt(0)=="0" && strMonth.length>1) 
		strMonth=strMonth.substring(1);
	
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1);
	}
	
	month=parseInt(strMonth);
	year=parseInt(strYr);

	if (strMonth.length<1 || month<1 || month>12){
		return false;
	}
	
	if(year < 50 ) year += 2000;
	if(year >50 && year <1000) year += 1900;
	if (strYear.length < 1 || year==0 || year<minYear || year>maxYear){
		return false;
	}
	if (month < 10) month = "0" + month ;
	return "" + month + "/" + year;
}

function isQuarter(dtStrIn){
	var dtStr = dtStrIn;
	if (dtStrIn.substring(0,1).toUpperCase() == "Q") {
		dtStr = "0"+dtStrIn.substring(1);
	}
	var dtCh= "*";
	if (dtStr == "") return "";
	var daysInMonth = DaysArray(12);
	
	for (var intElementNr = 0; intElementNr < strSeparatorArray.length; intElementNr++) {
		if (dtStr.indexOf(strSeparatorArray[intElementNr]) != -1) 
			dtCh = strSeparatorArray[intElementNr];
	}
	
	if (dtCh != "*") //neu co ky hieu phan cach
	{
		var pos1=dtStr.indexOf(dtCh);

		var strQuarter=dtStr.substring(0,pos1);
		var strYear=dtStr.substring(pos1+1);
	}
	else	//khong co ky hieu phan cach
	{
		if (dtStr.length>3) {
			strQuarter = dtStr.substr(0, 2);
			strYear = dtStr.substr(2);
   		}
		else
			return false;
	}

	if (!isInteger(strYear) || !isInteger(strQuarter)) 
		return false;
	strYr=strYear;
	
	if (strQuarter.charAt(0)=="0" && strQuarter.length>1) 
		strQuarter=strQuarter.substring(1);
	
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1);
	}
	
	quarter=parseInt(strQuarter);
	year=parseInt(strYr);

	if (strQuarter.length<1 || quarter<1 || quarter>4){
		return false;
	}
	
	if(year < 50 ) year += 2000;
	if(year >50 && year <1000) year += 1900;
	if (strYear.length < 1 || year==0 || year<minYear || year>maxYear){
		return false;
	}
	return "Q" + quarter + "/" + year;
}

function isYear(dtStr){
	if (dtStr == "") return "";
	var daysInMonth = DaysArray(12);
	strYear=dtStr;
	strYr=strYear;
	if (!isInteger(strYear)) return false;
	for (var i = 1; i <= 3; i++) {
		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1);
	}
	
	year=parseInt(strYr);
	if(year < 50 ) year += 2000;
	if(year >50 && year <1000) year += 1900;
	if (strYear.length < 1 || year==0 || year<minYear || year>maxYear){
		return false;
	}
	return "" + year;
}

/**
* Ham: validDateFormat()
* Kiem tra, parse truong kieu Date theo cac format khac nhau
* 	dateField: Item chua gia tri can kiem tra format kieu date
* 	dateFormat: Kieu format can kiem tra
* Gia tri: 
* 	true - neu hop le, Gia tri duoc dua ve dang dd/mm/yyyy
* 	false - neu khong hop le
* Su dung: onBlur="validDateFormat(this,'dd/mm/yyyy');
*/
function validDate(dateField, dateFormat){
	var dt=dateField;
	if ((dt.value==null) || (dt.value == "")) return true;
	var returndate;
	if ((dateFormat.toUpperCase() == 'DD/MM/YYYY') || (dateFormat.toUpperCase() == 'D')){
		returndate = isDate(dt.value);
	}
	else if ((dateFormat.toUpperCase() == 'MM/YYYY') || (dateFormat.toUpperCase() == 'M'))	{
		returndate = isMonth(dt.value);
	}
	else if ((dateFormat.toUpperCase() == 'Q/YYYY') || (dateFormat.toUpperCase() == 'Q')){
		returndate = isQuarter(dt.value);
	}else if ((dateFormat.toUpperCase() == 'YYYY') || (dateFormat.toUpperCase() == 'Y')){
		returndate = isYear(dt.value);
	}else if ((dateFormat.toUpperCase() == 'DD/MM') ){
		returndate = isDDMM(dt.value);

	}else	{
		returndate = false;
	}

	if (returndate ==false){
		showError(msgInvalidFormat);
		err='error';
		dt.focus();
		return false;
	}
		dt.value = returndate;
		return returndate;
 }
 /** 
* Ham : isNumber()
* Kiem tra gia tri la kieu so - Number
* 	inputVal: Gia tri can kiem tra
* Su dung: x=isNumber(12310);
*/

/** 
* Ham : isNumber()
* Kiem tra gia tri la kieu so - Number
* 	inputVal: Gia tri can kiem tra
* Su dung: x=isNumber(12310);
*/

function isNumber2(inputVal) {
	inputStr = inputVal.toString()
	for (var i = 0; i < inputStr.length; i++) {
		var oneChar = inputStr.charAt(i)
		if ((oneChar < "0" || oneChar > "9") && oneChar != "." && oneChar != ",") {
			return false
		}
	}
	return true;
}

/** 
* Ham : validNumber()
* Kiem tra du lieu kieu so - Number
* 	obj: Item chua gia tri can kiem tra
* 	size: Kich thuoc cua gia tri
* Su dung: onBlur="validNumber(this,10)";
*/
function validNumber(obj,size){
	var arg = validNumber.arguments;
	if ((obj.value==null) || (obj.value == "")) return true;
	obj.value = trim(obj.value);
	obj.value = toNumber(obj.value);
	
	if(obj.value.indexOf('-')>=0 && !obj.readOnly){
		showError(msgInvalidValue);
		err='error';
                obj.value=0;
		obj.focus();
		return false;
	}

	if(!isNumber2(obj.value) && !obj.readOnly) {
		showError(msgInvalidFormat);
		err='error';
                obj.value=0;
		obj.focus();
		return false;
	}

	if (obj.value.length > size && !obj.readOnly){
		showError(msgInvalidSize);
		err='error';
                obj.value=0;
		obj.focus();
		return false;
		
	}	
    else
        obj.value=toFormatNumberDe(obj.value,2);
            
	return true;
}
function isNumberTCS(inputVal) {
	inputStr = inputVal.toString()
	for (var i = 0; i < inputStr.length; i++) {
		var oneChar = inputStr.charAt(i);
		if ((oneChar < "0" || oneChar > "9") && oneChar != "." && oneChar != "-" && oneChar != ',') {
			return false;
		}		
	}
	return true;
}
/** 
* Written: DungTV10
* Ham : validNumber1()
* Kiem tra du lieu kieu so - Number
* 	obj: Item chua gia tri can kiem tra
* 	size: Kich thuoc cua gia tri
* Gia tri cua so co dinh dang: ####.00
* Su dung: onBlur="validNumber(this,10)";
*/
function validNumber1(obj,size){	
	
	var arg = validNumber1.arguments;	
	if ((obj.value==null) || (obj.value == "")) return true;
	obj.value = trim(obj.value);
	
    var temp=obj.value;       
    if(temp==0)
    {
    	obj.value='';
    	return false;
    }
//    while(obj.value.indexOf('0')>=0 && !obj.readOnly){
//    	/var pos_0 = obj.value.indexOf('0');
//    	//if(pos_0==0)obj.value = obj.value.substring(1);
//    	else
//    		break;
//    }
	var splitResult = obj.value.split(".");		
	if(splitResult.length>2){
		if(obj.name=='ty_gia')
			showError(msgInvalidFormat);
		else if(obj.name='dinh_muc')
			showError(msgInvalidFormat_DMuc);	
		else
			showError(msgInvalidFormat_TienNT);
		err='error';
        obj.value='';
		obj.focus();
		return false;
	}	
	if(obj.value.indexOf('.')>=0 && !obj.readOnly){
		var temp1 = obj.value.substring(0,obj.value.indexOf('.'));		
		if(temp1==''){			
			err='error';
			obj.value='';
			obj.focus();
			return false;
		}
	}	
	if(obj.value.indexOf('.')>=0 && !obj.readOnly){		
		obj.value = toNumber2(obj.value);		
		var pos = obj.value.indexOf('.');			
		var decimal = obj.value.substring(pos+1,obj.value.length);			
		
		if(decimal.length==2){			
			obj.value = obj.value;
		}else if(decimal.length==1){			
			obj.value =obj.value+'0';
		}else{						
			obj.value = Math.round(obj.value*100)/100;			
		}				
	}		
	
	if(!isNumberTCS(toNumber2(obj.value)) && !obj.readOnly) {		
		showError(msgInvalidFormat);
		err='error';
                obj.value='';
		obj.focus();
		return false;
	}		
	
	obj.value = toNumber2(obj.value);	
	
	var temp = obj.value.indexOf(".");
	if(temp == -1) temp = obj.value.length;	
	var abcd = obj.value.substring(0,temp);	
	if (abcd.length > size && !obj.readOnly){
		 showError(msgInvalidSize);
		 err='error';
                obj.value='';
		 obj.focus();
		 return false;
	}   	
	return true;
}

/** 
* Ham : validTextNumber()
* Kiem tra du lieu kieu so va khong them cac dau phay phan cach - Number
* 	obj: Item chua gia tri can kiem tra
* 	size: Kich thuoc cua gia tri
* Su dung: onBlur="validTextNumber(this,10)";
*/
function validTextNumber(obj,size){
	if ((obj.value==null) || (obj.value == "")) return true;
	obj.value = trim(obj.value);	
	obj.value = toNumber(obj.value);
	if(!isNumber(obj.value) && !obj.readOnly) {
		showError(msgInvalidFormat);
		err='error';
		obj.focus();
		return false;
	}
	if (obj.value.length > size){
		showError(msgInvalidSize);
		err='error';
		obj.focus();
		return false;
	}
	return true;
}

/**
* Ham: validSize()
* Kiem tra do dai cua du lieu
* 	obj: Item chua gia tri can kiem tra
* 	size: Kich thuoc cua gia tri
* Su dung: onBlur="validSize(this, 10)"
*/
function validSize(obj,size){        
	if ((obj.value==null) || (obj.value == "")) return true;
	obj.value = trim(obj.value);	
	if (obj.value.length > size){                
		showError(msgInvalidSize);
		obj.focus();
		return false;
	}
	return true;
}

/*
		CompareDate(fromDate, toDate)							[01/10/2006]
			+	Tra ve -1	khi		fromDate > toDate
			+	Tra ve  0	khi		fromDate = toDate
			+	Tra ve  1	khi		fromDate < toDate
			+	Tra ve  2	khi		fromDate hoac toDate null
*/
function CompareDate(fromDate, toDate)
{
	if ((fromDate == "") || (toDate == ""))
	{
		return 2;
	}
	else
	{
		// Date format: mm/dd/yyyy
		var date   = parseInt(fromDate.substring(0,2),10);
		var month  = parseInt(fromDate.substring(3,5),10);
		var year   = parseInt(fromDate.substring(6,10),10);		
		var m_fromdate = Date.UTC(year, month, date, 0, 0, 0, 0);
		
		date   = parseInt(toDate.substring(0,2),10);
		month  = parseInt(toDate.substring(3,5),10);
		year   = parseInt(toDate.substring(6,10),10);		
		var m_toDate = Date.UTC(year, month, date, 0, 0, 0, 0);

		if (m_fromdate > m_toDate) {
			return -1;
		}
		else if (m_fromdate < m_toDate) {
			return 1;
		}
		else if (m_fromdate == m_toDate) {
			return 0;	
		}
	}
}

// Kiá»m tra ngÃ y nháº­p vÃ o khÃ´ng ÄÆ°á»£c nhá»�? hÆ¡n ngÃ y hiá»n táº¡i
function checkDateValue(inDate, fieldName, compObj)	{ 	
	if (toDate(inDate.value,"DD/MM/YYYY") >= new Date())
	{	
		msgCompare = msgCompare.replace('1',fieldName);
		msgCompare = msgCompare.replace('2',compObj); 		
		showError(msgCompare);
		inDate.focus();
                return false;
	} 
        return true;
}
function checkDateValueTCS(inDate, fieldName, compObj)	{ 	
	var msgCompare2 = "w khÃ´ng ÄÆ°á»£c lá»n hÆ¡n z!";
	if (toDate(inDate.value,"DD/MM/YYYY") >= new Date())
	{	
		msgCompare2 = msgCompare2.replace('w',fieldName);
		msgCompare2 = msgCompare2.replace('z',compObj); 		
		showError(msgCompare2);
		inDate.focus();
                return false;
	} 
        return true;
}

// Kiá»m tra ngÃ y nháº­p vÃ o khÃ´ng ÄÆ°á»£c nhá»�? hÆ¡n ngÃ y hiá»n táº¡i
function checkDateValue1(inDate, fieldName, compObj)	{ 
	if (toDate(inDate.value,"DD/MM/YYYY") <= new Date()){	
		msgCompare1 = msgCompare1.replace('1',fieldName);
		msgCompare1 = msgCompare1.replace('2',compObj); 		
		showError(msgCompare1);
		inDate.focus();
                return false;
	} 
        return true;
}

/**
* Check Date
* Used: onblur="CheckDate(this)"
* Format: dd/mm/yyyy
*/
function CheckDate(field){	
    var checkstr = "0123456789";
    var DateField = field;
    var Datevalue = "";
    var DateTemp = "";
    var seperator = "/";
    var day;
    var month;
    var year;
    var leap = 0;
    var err = 0;
    var i;
	var j=0;
    err = 0;
    DateValue = DateField.value;
    if (DateValue =="")	return true;
    /* Delete all chars except 0..9 */
    for (i = 0; i < DateValue.length; i++) {
	  if (checkstr.indexOf(DateValue.substr(i,1)) >= 0) {
	     DateTemp = DateTemp + DateValue.substr(i,1);
	  }
    }      
    DateValue = DateTemp;
    /* Always change date to 8 digits - string*/
    /* if year is entered as 2-digit / always assume 20xx */
    if (DateValue.length == 6) {
         DateValue = DateValue.substr(0,4) + '20' + DateValue.substr(4,2); }  
    if (DateValue.length != 8) 
    {
      err = 19;
     }
    /* year is wrong if year = 0000 */
    year = DateValue.substr(4,4);
    if (year == 0) {
      err = 20;
    }     
    /* Validation of month*/
    day = DateValue.substr(0,2);
    month = DateValue.substr(2,2);   
    if ((month < 1) || (month > 12)) {
      err = 21;
    }
    /* Validation of day*/
    if (day < 1) {
     err = 22;
    }
   
    /* Validation leap-year / february / day */
    if ((year % 4 == 0) || (year % 100 == 0) || (year % 400 == 0)) {
      leap = 1;
    }
    if ((month == 2) && (leap == 1) && (day > 29)) {
      err = 23;
    }
    if ((month == 2) && (leap != 1) && (day > 28)) {
      err = 24;
    }
    /* Validation of other months */
    if ((day > 31) && ((month == "01") || (month == "03") || (month == "05") || (month == "07") || (month == "08") || (month == "10") || (month == "12"))) {
      err = 25;
    }
    if ((day > 30) && ((month == "04") || (month == "06") || (month == "09") || (month == "11"))) {
      err = 26;
    }
    /* if 00 ist entered, no error, deleting the entry */
    if ((day == 0) && (month == 0) && (year == 00)) {
      err = 0; day = ""; month = ""; year = ""; seperator = "";
    }
    /* if no error, write the completed date to Input-Field (e.g. 13.12.2001) */
    
    if (err == 0) {
      DateField.value = day + seperator + month + seperator + year;
      if (DateField.value == "")  	
      {
		alert(GetUnicode("&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;"));
    //strAlert = "&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;";
    //strAlert = GetUnicode(strAlert);
    //alert(strAlert);
    
		DateField.focus();		
		return false;
      }      
    }
    /* Error-message if err != 0 */
    else {			
		alert(GetUnicode("&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;"));
        DateField.focus();        
		return false;		
    }
   
    if ( parseInt(year) < 1800 )
    {	
		alert(GetUnicode("&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;"));
        DateField.focus();
		return false;
    }   
   return true;
}
/**
* Check Date
* Used: onblur="CheckDate1(this)"
* Format: dd/mm/yyyy
* Use: Ham nay nhap ngay co dinh dang: MM/yyyy
*/
function CheckDate1(field){
    var checkstr = "0123456789";
    var DateField = field;
    var Datevalue = "";
    var DateTemp = "";
    var seperator = "/";
    var day;
    var month;
    var year;
    var leap = 0;
    var err = 0;
    var i;

    err = 0;
    DateValue = DateField.value;
    if (DateValue =="")	return true;
    /* Delete all chars except 0..9 */
    for (i = 0; i < DateValue.length; i++) {
	  if (checkstr.indexOf(DateValue.substr(i,1)) >= 0) {
	     DateTemp = DateTemp + DateValue.substr(i,1);
	  }
    }
    DateValue = DateTemp;
    /* Always change date to 8 digits - string*/
    /* if year is entered as 2-digit / always assume 20xx */
    if (DateValue.length == 4) {
         DateValue = DateValue.substr(0,2) + '20' + DateValue.substr(2,2); }  
    if (DateValue.length != 6) {
      err = 19;}
    /* year is wrong if year = 0000 */
    year = DateValue.substr(2,4);
    if (year == 0) {
      err = 20;
    }
    /* Validation of month*/
    /* Khong validate ngay vi ngay nhap vao co dang: 09/2009*/
    //day = DateValue.substr(0,2);
    month = DateValue.substr(0,2);   
    if ((month < 1) || (month > 12)) {
      err = 21;
    }   
    /* if 00 ist entered, no error, deleting the entry */
    if ((month == 0) && (year == 00)) {
      err = 0; month = ""; year = ""; seperator = "";
    }
    /* if no error, write the completed date to Input-Field (e.g. 13.12.2001) */
    
    if (err == 0) {
      DateField.value = month + seperator + year;
      if (DateField.value == "")  	
      {
		alert(GetUnicode("&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;"));
		DateField.focus();		
		return false;
      }      
    }
    /* Error-message if err != 0 */
    else {			
	alert(GetUnicode("&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;"));
        DateField.focus();
	return false;
    }
   
    if ( parseInt(year) < 1800 )
    {	
	alert(GetUnicode("&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;"));
        DateField.focus();
	return false;
    }    
   return true;
}

function checkMasothue(field){
    var field_value=field.value;
    if (field_value.length>0){
        if (field_value.length != 10 && field_value.length!=14){
            alert("Mã số thuế phải có 10 hoặc 14 ký tự số VD 1234567890 hoáº·c 1234567890-123");
            field.focus();
        }else if (field_value.length==10){
            if (!IsNumeric(field_value)){
                alert("Mã số thuế phải có 10 hoặc 14 ký tự số VD 1234567890 hoáº·c 1234567890-123");
                field.focus();
            }
        }else if (field_value.length==14){
            IsMasothue14(field);
        }
    }
}
//
function IsMasothue14(field)
{
   var sText=field.value;
   var ValidChars = "0123456789.";
   var IsNumber=true;
   var Char;
   for (i = 0; i < sText.length && IsNumber == true; i++) 
      { 
        Char = sText.charAt(i); 
        if (i!=10){
            if (ValidChars.indexOf(Char) == -1){
                IsNumber = false;
                alert("Mã số thuế phải có 10 hoặc 14 ký tự số VD 1234567890 hoặc 1234567890-123");
                field.focus();
                return;
            }
        }else if (i==10&&Char!='-'){
            alert("Mã số thuế phải có 10 hoặc 14 ký tự số VD 1234567890 hoặc 1234567890-123");
            field.focus();
        }
      }
     return IsNumber;     
}
function checkIsNumber(field,name){
    var field_value=field.value;
    if (field_value.length > 0 && !IsNumeric(trim(field_value))){
        alert("Bạn phải nhập "+ ((name=='undefined'||name==null)?'':name)+ " kiểu số");
        field.focus();
    }
}

function IsNumeric(sText)
{
   var ValidChars = "0123456789.,-";
   var IsNumber=true;
   var Char;
   for (i = 0; i < sText.length && IsNumber == true; i++) 
      { 
      Char = sText.charAt(i); 
      if (ValidChars.indexOf(Char) == -1) 
         {
         IsNumber = false;
         }
      }
     return IsNumber;
}

function checkCompare(field1,field2,focusField){    
     var check=true;
     var fromdate=document.getElementById(""+field1+"").value;     
     var todate=document.getElementById(""+field2+"").value;     
     if (fromdate.length>0 && todate.length>0){
        if (CompareDate(fromdate,todate)==-1){
            check=false;
           alert("Từ ngày không thể sau đến ngày");
            document.getElementById(""+focusField+"").focus();
        }
     }
     return check;
}
function checkCompare(fromDate, toDate){
    if (CompareDate(fromDate, toDate)=='-1'){
        alert("Từ ngày phải trước đến ngày");
        fromDate.focus();
        return;
    }
}
function CheckDateCall(field){
    var checkstr = "0123456789";
//    var DateField = field;
    var Datevalue = "";
    var DateTemp = "";
    var seperator = "/";
    var day;
    var month;
    var year;
    var leap = 0;
    var err = 0;
    var i;
    err = 0;
    DateValue = document.getElementById(field).value;
    if (DateValue =="")	return true;
    /* Delete all chars except 0..9 */
    for (i = 0; i < DateValue.length; i++) {
	  if (checkstr.indexOf(DateValue.substr(i,1)) >= 0) {
	     DateTemp = DateTemp + DateValue.substr(i,1);
	  }
    }
    DateValue = DateTemp;
    /* Always change date to 8 digits - string*/
    /* if year is entered as 2-digit / always assume 20xx */
    if (DateValue.length == 6) {
         DateValue = DateValue.substr(0,4) + '20' + DateValue.substr(4,2); }  
    if (DateValue.length != 8) {
      err = 19;}
    /* year is wrong if year = 0000 */
    year = DateValue.substr(4,4);
    if (year == 0) {
      err = 20;
    }
    /* Validation of month*/
    day = DateValue.substr(0,2);
    month = DateValue.substr(2,2);   
    if ((month < 1) || (month > 12)) {
      err = 21;
    }
    /* Validation of day*/
    if (day < 1) {
     err = 22;
    }
   
    /* Validation leap-year / february / day */
    if ((year % 4 == 0) || (year % 100 == 0) || (year % 400 == 0)) {
      leap = 1;
    }
    if ((month == 2) && (leap == 1) && (day > 29)) {
      err = 23;
    }
    if ((month == 2) && (leap != 1) && (day > 28)) {
      err = 24;
    }
    /* Validation of other months */
    if ((day > 31) && ((month == "01") || (month == "03") || (month == "05") || (month == "07") || (month == "08") || (month == "10") || (month == "12"))) {
      err = 25;
    }
    if ((day > 30) && ((month == "04") || (month == "06") || (month == "09") || (month == "11"))) {
      err = 26;
    }
    /* if 00 ist entered, no error, deleting the entry */
    if ((day == 0) && (month == 0) && (year == 00)) {
      err = 0; day = ""; month = ""; year = ""; seperator = "";
    }
    /* if no error, write the completed date to Input-Field (e.g. 13.12.2001) */
    
    if (err == 0) {
      document.getElementById(field).value = day + seperator + month + seperator + year;
      if (DateValue == "")  	
      {
        alert(GetUnicode("&#272;&#7883;nh d&#7841;ng ng&#224;y kh&#244;ng h&#7907;p l&#7879;"));
		document.getElementById(field).focus();		
        return false;
      }         
    }
   
    else {
	return false;
    }
    if ( parseInt(year) < 1800 )
    {
	return false;
    }
    
   return true;
}
function next_Tab(elmnt,content)
	{
	if (content.length==elmnt.maxLength)
		{
		next=elmnt.tabIndex;		
		if (next<document.forms[0].elements.length && !elmnt.readOnly)
			{
				var obj = null;
				for (var i=0; i < document.forms[0].elements.length; i++) {
					obj=document.forms[0].elements[i];
					if (obj.getAttribute("tabindex") == (elmnt.getAttribute("tabindex") + 1)){						
						if(elmnt.name=="ttct_noidungkt"){
							obj=document.forms[0].elements[i+1];
						}
						obj.focus();
					}
				}			
			}
		}
   }
 /*
  * Phuc vu tao Tab tren trang Web
  */  
 
 function TabObj(activeColor, deactiveColor) {
	this.activeColor;
	this.deactiveColor;
	this.arrTab = new Array();
}

function Tab(id, label, divContent, tdTab,height,width) {
	this.id = id;
	this.label = label;
	this.divContent = divContent;
	this.tdTab = tdTab;
	this.height = height;
	this.width = width;
}
function formatNumber(o,decimal_number){
		var ojb=toFormatNumberDe(toNumber(o.value),decimal_number);
		if (o.value!='' && IsNumeric(ojb)) {
			o.value=ojb;
		}else{
			o.value='';
		}
}
function selectTab(tab) {	
 	hiddenLayer(activeTab);
	activeTab.tdTab.innerHTML = 
		'<a href="javascript:displayTab(' + activeTab.id + ')" class="textlink">' +
							   activeTab.label + 
							  '</a>';	
	activeTab.tdTab.bgColor = deactiveColor;

	showHiddenLayer(tab);
	tab.tdTab.innerHTML = tab.label;
	tab.tdTab.bgColor = activeColor;	
	activeTab = tab;
	
}
function hiddenLayer(tab){
	tab.divContent.style.visibility = 'hidden';	
	tab.divContent.style.position='absolute';	
	tab.divContent.style.height=0;
	tab.divContent.style.width=0;
}

function showHiddenLayer(tab) {	
//	tab.divContent.style.height=tab.height;
	tab.divContent.style.width=tab.width;
	tab.divContent.style.position='static';
	tab.divContent.style.visibility = 'visible';	
}
function checkNowdate(field1,field2,focusField,name){		
         var check=true;         
         var fromdate=document.getElementById(""+field1+"").value;
         var todate=document.getElementById(""+field2+"").value;       
         if (fromdate.length>0 && todate.length>0){
            if (CompareDate(fromdate,todate)==-1){
                check=false;
                alert(name+" không thể sau ngày "+todate);
                document.getElementById(""+focusField+"").focus();
            }
         }
         return check;
}
function BlockKey(){        
	if (event.keyCode < 47 ||event.keyCode > 57 )
        event.returnValue = false;
	else
        {
          event.returnValue = true;
        }
	if (event.keyCode==13) event.returnValue=true;

 }
 
function checkMasothueCall(field,focus_f){
    var check=true;
    var field_value=field;
    if (trim(field_value).length>0){
        if (field_value.length != 10 && field_value.length!=14){
            check=false;
        }else if (field_value.length==10){
            if (!IsNumeric(field_value)){
                check=false;
            }
        }else if (field_value.length==14){
            var sText=field;
            var ValidChars = "0123456789.";
            var Char;
            for (i = 0; i < sText.length && check == true; i++) 
              { 
                Char = sText.charAt(i); 
                if (i!=10){
                    if (ValidChars.indexOf(Char) == -1){
                        check = false;
                    }
                }else if (i==10&&Char!='-'){
                    check = false;
                }
              }
        }
    }
    return check;
}
function CancelKeycode()
{
	for (var i = 0; i < arguments.length; i++)
	{
		if (event.keyCode == arguments[i])
		{
			// cancel the default value
			event.returnValue=false;
			event.cancel = true;					
		}
	}
}

function checkTextboxLength(Field, MaxLength, FieldName)
{	
	if ((Field.type == 'text') || (Field.type == 'textarea'))
	{
		if (trim(Field.value).length <= MaxLength)
		{
			if (FieldName != null)
			{
				alert("Ná»i dung má»¥c " + FieldName + " khÃ´ng há»£p lá»\n(Pháº£i cÃ³ tá»i thiá»u " + MaxLength + " kÃ½ tá»±)");
				if (Field.style.display != 'none')
					Field.focus();
			}
			
			return false;
		}
		else
		{
			return true;
		}
	}
}

/**
* Check Time
* Used: onblur="CheckTime(this)"
* Format: dd/mm/yyyy
*/
function CheckTime(field){
    var checkstr = "0123456789";
    var TimeField = field;
    var TimeValue = "";
    var TimeTemp = "";
    var seperator = ":";
    var hour;
    var minute;
    var second;
    var err = 0;
    var i;
    err = 0;
    TimeValue = TimeField.value;
    if (TimeValue =="")	return true;
    /* Delete all chars except 0..9 */
    for (i = 0; i < TimeValue.length; i++) {
	  if (checkstr.indexOf(TimeValue.substr(i,1)) >= 0) {
	     TimeTemp = TimeTemp + TimeValue.substr(i,1);
	  }
    }
    TimeValue = TimeTemp;
    /* Always change time to 6 digits - string*/
    /* if hour is entered as 0-digit always assume 00 */
    /* if munute is entered as 0-digit always assume 00*/
    if (TimeValue.length == 2) {
         TimeValue = '00' + '00' + TimeValue.substr(0,2); }
    if(TimeValue.length == 4){
        TimeValue = '00' + TimeValue.substr(0,4);
    }
    if(TimeValue.length == 5){
        TimeValue = '0' + TimeValue.substr(0,5);
    }
    if (TimeValue.length != 6) {
      err = 19;}
    /* second is wrong if second = 00 */
    second = TimeValue.substr(4,2);
    hour = TimeValue.substr(0,2); 
    minute = TimeValue.substr(2,2);  
    if (hour== 0 && minute == 0  && second == 0) {
      err = 20;
    }
    if(second > 60){
        err = 25;
    }
    /* Validation of minute*/
    if ((minute < 0) || (minute > 60)) {
      err = 21;
    }
    /* Validation of hour*/
    if (hour < 0 || hour > 24) {
     err = 22;
    }
    if (err == 0) 
    {
        if(hour == 24){
            TimeField.value = '24' + seperator + '00' + seperator + '00';
        }else{
        TimeField.value = hour + seperator + minute + seperator + second;
        }
        if (TimeField.value == "")  	
        {
		alert("�?ịnh dạng th�?i gian không hợp lệ!");
                TimeField.value = '00' + seperator + '00' + seperator + '00';
		TimeField.focus();		
		return false;
        }      
    }else if(err == 20){
                alert("Th�?i gian tối thiểu phải 1 giây!");
                TimeField.value = '00' + seperator + '00' + seperator + '00';
		TimeField.focus();		
		return false;
    }
    /* Error-message if err != 0 */
    else {
	TimeField.focus();	
	alert("�?ịnh dạng không hợp lệ!");
        TimeField.value = '00' + seperator + '00' + seperator + '00';
	return false;
    }
   return true;
}
function justNumbers(e)
{
	var keynum;
	var keychar;
	var numcheck;

	if(window.event) // IE
	{
		keynum = e.keyCode;
	}
	else if(e.which) // Netscape/Firefox/Opera
	{
		keynum = e.which;
	}
	
	keychar = String.fromCharCode(keynum);
	numcheck = /\d/;
	return numcheck.test(keychar);
}
function capLock(e){ 
	kc = e.keyCode?e.keyCode:e.which;
	sk = e.shiftKey?e.shiftKey:((kc == 16)?true:false); 
	if(((kc >= 65 && kc <= 90) && !sk)||((kc >= 97 && kc <= 122) && sk))
		document.getElementById('divMayus').style.visibility = 'visible'; 
	else  
		document.getElementById('divMayus').style.visibility = 'hidden';
}
function checkEmpty(Field, FieldName)
{	
	if ((Field.type == 'text') || (Field.type == 'textarea'))
	{
		if (trim(Field.value) == "")
		{
			if (FieldName != null)
			{
				alert("Xin vui lÃ²ng nháº­p " + FieldName);
				if (Field.style.display != 'none')
					Field.focus();
			}
			
			return false;
		}
		else
		{
			return true;
		}
	}
	else if ((Field.type == 'select-multiple')||(Field.type == 'select-one'))
	{
		if (trim(Field.value) != "")
		{
			return true;
		}
		else
		{
			if (FieldName != null)
			{
				alert("Xin vui lÃ²ng chá»�?n " + FieldName);
				if (Field.style.display != 'none')
					Field.focus();
			}
			return false;
		}
	}
}    
function notPrivilege()
{
    alert("Bạn không có quy�?n sử dụng chức năng này");
}
/* Lấy tên kho bạc theo mã kho bạc. */
var v_ten;
var v_id;
var v_ma;
function getTenKhoBac(ma,ten,id,action_name){
	 var shkb =document.getElementById(ma).value;
   v_ten = ten;   
   v_id = id;
   v_ma= ma;
	 if (shkb.length<4){
		 document.getElementById(ten).value = "";
	 }else{
	 var objJSON = {
        "ma" : document.getElementById(ma).value};    
    var strJSON = encodeURIComponent(JSON.stringify(objJSON));        
    new Ajax.Request(action_name,
     {
       method: "post",
       async: false,
       parameters: "strJSON=" + strJSON,
       onSuccess: onSuccessKBac,

       onError: onError,
       onLoading: onLoading
     });
	 }
}
//Callback function
   function onSuccessKBac(transport, json){
      if(json == null){      
       	document.getElementById(v_ten).value = "";
        document.getElementById(v_id).value = "";
      }else if(json.executeError != null && json.executeError != 'null'){
        document.getElementById(v_ten).value = "";
        document.getElementById(v_id).value = "";
      }else if(json.ten != null && json.ten != 'null'){
        if(json.ten != '0'){     
          document.getElementById(v_ten).value = convertToUTF8(json.ten);
          document.getElementById(v_id).value = json.id;
        }else{
          document.getElementById(v_ten).value = "";
          document.getElementById(v_id).value = "";
          document.getElementById(v_ma).value = "";
          alert("Mã kho bạc không tồn tại.");
           document.getElementById(v_ma).focus();          
        }
      }      
   }
function getTenNganHang(ma,ten, id){
	 var shkb = document.getElementById(ma).value;
   v_ten = ten;   
   v_id = id;
   v_ma = ma;
   if(document.getElementById(ma).readOnly || document.getElementById(ma).readOnly == 'readOnly'){
      return;
   }
   if(shkb.length<=0){
    document.getElementById(ten).value = "";
//   }else if (shkb.length!=8){
//		 document.getElementById(ten).value = "";
//     document.getElementById(v_ten).value = "";
//     document.getElementById(v_id).value = "";     
//     document.getElementById(v_ma).focus();
//     alert("Mã NH/KB không tồn tại.");
	 }else{
	 var objJSON = {
        "ma" : document.getElementById(ma).value};    
    var strJSON = encodeURIComponent(JSON.stringify(objJSON));     
    new Ajax.Request("loadDMNHAction.do",
     {
       method: "post",
       async: false,
       parameters: "strJSON=" + strJSON,
       onSuccess: onSuccessNH,

       onError: onError,
       onLoading: onLoading
     });
    }
}
//Callback function
   function onSuccessNH(transport, json){        
      if(json == null){      
       	document.getElementById(v_ten).value = "";
        document.getElementById(v_id).value = "";
      }else if(json.executeError != null && json.executeError != 'null'){
        document.getElementById(v_ten).value = "";
        document.getElementById(v_id).value = "";
        alert(convertToUTF8(json.executeError));
      }else if(json.ten != null && json.ten != 'null'){
        if(json.ten != '0'){          
          document.getElementById(v_ten).value = convertToUTF8(json.ten);
          document.getElementById(v_id).value = json.id;          
        }else{
          document.getElementById(v_ten).value = "";
          document.getElementById(v_id).value = "";
          document.getElementById(v_ma).value = "";
          document.getElementById(v_ma).focus();
          alert("Mã NH/KB không tồn tại.");
        }
      }      
   }
   function onLoading(){
      	document.getElementById('indicator').style.display = "";               
   }
   function onError(){
       alert("Error");
   } 
/*Load LTT*/
function getLTToanInfo(ma){
        var so_yctt = document.getElementById(ma).value;   
        var objJSON = {"so_yctt" : so_yctt};
        var strJSON = encodeURIComponent(JSON.stringify(objJSON));
        new Ajax.Request("loadLTTDiAction.do",
        {
          	method: "post",
          	async: false,
          	parameters: "strJSON=" + strJSON,
          	onSuccess: onSuccessLTT,
          	onError: onError,
            onLoading: onLoading
        });
	   }
 //Callback function
   function onSuccessLTT(transport, json){  
      //document.forms[0].id.value = json.id; 
      var form = document.forms[0];
      if(json.so_yctt != null){
        form.so_yctt.value = json.so_yctt;
      }else{
        form.so_yctt.value = "";
      }
      if(json.nhkb_chuyen != null){
        form.nhkb_chuyen.value = json.nhkb_chuyen;
      }else{
        form.nhkb_chuyen.value = "";
      }
      if(json.nhkb_nhan != null){
        form.nhkb_nhan.value = json.nhkb_nhan;
      }else{
        form.nhkb_nhan.value = "";
      }
      if(json.so_ct_goc != null){
        form.so_ct_goc.value = json.so_ct_goc;
      }else{
        form.so_ct_goc.value = "";
      }
      
      if(json.nt_it > 0){
        form.nt_it.value = json.nt_it;        
        alert(" hehe if nt_it = "+json.nt_it);
      }else{
        form.nt_it.value = "";
        alert(" hehe else nt_it = "+json.nt_it);
      }
      if(json.ngay_ct != null & json.ngay_ct.lenght > 0){
        //form.ngay_ct.value = json.ngay_ct;
      }else{
        form.ngay_ct.value = "12/12/2011";
      }
      if(json.ttv_nhan != null){
        form.ttv_nhan.value = json.ttv_nhan;
      }else{
        form.ttv_nhan.value = "";
      }
      if(json.ngay_nhan != null){
        //form.ngay_nhan.value = json.ngay_nhan;
      }  
      if(json.ktt_duyet != null){
        form.ktt_duyet.value = json.ktt_duyet;
      }else{
        form.ktt_duyet.value = "";
      }
      if(json.ngay_ktt_duyet != null){
        //form.ngay_ktt_duyet.value = json.ngay_ktt_duyet;
      }  
      if(json.ndung_tt != null){
        form.ndung_tt.value = convertToUTF8(json.ndung_tt);
      }else{
        form.ndung_tt.value = "";
      }
      if(json.tong_sotien != null){
        form.tong_sotien.value = json.tong_sotien;
      }else{
        form.tong_sotien.value = "";
      }
      
      if(json.ten_tk_chuyen != null){
        form.ten_tk_chuyen.value = convertToUTF8(json.ten_tk_chuyen);
      }
      if(json.so_tk_chuyen != null){
        form.so_tk_chuyen.value = json.so_tk_chuyen;
      }
      if(json.id_nhkb_chuyen != null){
        form.id_nhkb_chuyen.value = json.id_nhkb_chuyen;
      }
      if(json.ten_nhkb_chuyen != null){
        form.ten_nhkb_chuyen.value = convertToUTF8(json.ten_nhkb_chuyen);
      }
      if(json.ttin_kh_chuyen != null){
        form.ttin_kh_chuyen.value = convertToUTF8(json.ttin_kh_chuyen);
      }
      
      if(json.ten_tk_nhan != null){
        form.ten_tk_nhan.value = convertToUTF8(json.ten_tk_nhan);
      }
      if(json.so_tk_nhan != null){
        form.so_tk_nhan.value = json.so_tk_nhan;
      }
      if(json.id_nhkb_nhan != null){
        form.id_nhkb_nhan.value = json.id_nhkb_nhan;
      } 
      if(json.ten_nhkb_nhan != null){
        form.ten_nhkb_nhan.value = convertToUTF8(json.ten_nhkb_nhan);
      }
      if(json.ttin_kh_nhan != null){
        form.ttin_kh_nhan.value = convertToUTF8(json.ttin_kh_nhan);
      }
      
      if(json.lydo_ktt_day_lai != null){
        form.lydo_ktt_day_lai.value = convertToUTF8(json.lydo_ktt_day_lai);
      }
      if(json.lydo_gd_day_lai != null){
        form.lydo_gd_day_lai.value = convertToUTF8(json.lydo_gd_day_lai);
      }
   }
   function onLoading(){
      	document.getElementById('indicator').style.display = "";               
   }
   function onError(){
       alert("Error");
   }    
/* Lay tên nhóm theo mã nhóm. */
 function getTenNhom(){
	 var shkb = document.getElementById('id_shkb').value;
	 var objJSON = {
     "msg" : document.getElementById('id_ma_nhom').value + ":" + shkb
    };          
    var strJSON = encodeURIComponent(JSON.stringify(objJSON));
    new Ajax.Request("Load_TEN_NHOMPN.do",
  {
    method: "post",
    async: false,
    parameters: "strJSON=" + strJSON,
    onSuccess: onSuccessTNhom,
    onError: onError,
    onLoading: onLoading
  });
   function onLoading(){
   document.getElementById('indicator').style.display = "";               
   }
   function onError(){
       alert("Error");
   }
   //Callback function
   function onSuccessTNhom(req){      
       var jsonExpression = "(" + req.responseText + ")";        
       ten_nhom = eval(jsonExpression);
       if(typeof(ten_nhom.ten) == 'undefined'){
       	document.forms[0].id_ten_nhom.value = "";
       	alert("Không tồn tại mã nhóm");
       }else{
       	document.forms[0].id_ten_nhom.value = ten_nhom.ten;
       }
   }
}
function convertToUTF8(str1)
  {
    str1= str1.replace(/\\u00E1/g,'á');    
    str1= str1.replace(/\\u00C1/g,'�?');
    str1= str1.replace(/\\u00E0/g,'à');
    str1= str1.replace(/\\u00C0/g,'À');
    str1= str1.replace(/\\u1EA3/g,'ả');
    str1= str1.replace(/\\u1EA2/g,'Ả');

   str1= str1.replace(/\\u00E3/g,'ã');
    str1= str1.replace(/\\u00C3/g,'Ã');
    str1= str1.replace(/\\u1EA1/g,'ạ');
    str1= str1.replace(/\\u1EA0/g,'Ạ');
    //á �?

    str1= str1.replace(/\\u0103/g,'ă');
    str1= str1.replace(/\\u0102/g,'Ă');
    str1= str1.replace(/\\u1EAF/g,'ắ');
    str1= str1.replace(/\\u1EAE/g,'Ắ');
    str1= str1.replace(/\\u1EB1/g,'ằ');
    str1= str1.replace(/\\u1EB0/g,'Ằ');
    str1= str1.replace(/\\u1EB3/g,'ẳ');
    str1= str1.replace(/\\u1EB2/g,'Ẳ');
    str1= str1.replace(/\\u1EB5/g,'ẵ');
    str1= str1.replace(/\\u1EB4/g,'Ẵ');
    str1= str1.replace(/\\u1EB7/g,'ặ');
    str1= str1.replace(/\\u1EB6/g,'Ặ');
    //a+ A+ 



    str1= str1.replace(/\\u00E2/g,'Â');
    str1= str1.replace(/\\u00C2/g,'Â');
    str1= str1.replace(/\\u1EA5/g,'ấ');
    str1= str1.replace(/\\u1EA4/g,'Ấ');
    str1= str1.replace(/\\u1EA7/g,'ầ');
    str1= str1.replace(/\\u1EA6/g,'Ầ');
    str1= str1.replace(/\\u1EA9/g,'ẩ');
    str1= str1.replace(/\\u1EA8/g,'Ẩ');
    str1= str1.replace(/\\u1EAB/g,'ẫ');
    str1= str1.replace(/\\u1EAA/g,'Ẫ');
    str1= str1.replace(/\\u1EAD/g,'ậ');
    str1= str1.replace(/\\u1EAC/g,'Ậ');
    // â Â 




    str1= str1.replace(/\\u00E9/g,'é');
    str1= str1.replace(/\\u00C9/g,'É');
    str1= str1.replace(/\\u00E8/g,'è');
    str1= str1.replace(/\\u00C8/g,'È');
    str1= str1.replace(/\\u1EBB/g,'ẻ');
    str1= str1.replace(/\\u1EBA/g,'Ẻ');
    str1= str1.replace(/\\u1EBD/g,'ẽ');
    str1= str1.replace(/\\u1EBC/g,'Ẽ');
    str1= str1.replace(/\\u1EB9/g,'ẹ');
    str1= str1.replace(/\\u1EB8/g,'Ẹ');
    // é É 


    str1= str1.replace(/\\u00EA/g,'ê');
    str1= str1.replace(/\\u00CA/g,'Ê');
    str1= str1.replace(/\\u1EBF/g,'ế');
    str1= str1.replace(/\\u1EBE/g,'Ế');
    str1= str1.replace(/\\u1EC1/g,'�?');
    str1= str1.replace(/\\u1EC0/g,'Ề');
    str1= str1.replace(/\\u1EC3/g,'ể');
    str1= str1.replace(/\\u1EC2/g,'Ể');
    str1= str1.replace(/\\u1EC5/g,'ễ');
    str1= str1.replace(/\\u1EC4/g,'Ễ');
    str1= str1.replace(/\\u1EC7/g,'ệ');
    str1= str1.replace(/\\u1EC6/g,'Ệ');
    // ê Ê
   


    str1= str1.replace(/\\u00ED/g,'í');
    str1= str1.replace(/\\u00CD/g,'�?');
    str1= str1.replace(/\\u00EC/g,'ì');
    str1= str1.replace(/\\u00CC/g,'Ì');
    str1= str1.replace(/\\u1EC9/g,'ỉ');
    str1= str1.replace(/\\u1EC8/g,'Ỉ');
    str1= str1.replace(/\\u0129/g,'ĩ');
    str1= str1.replace(/\\u0128/g,'Ĩ');
    str1= str1.replace(/\\u1ECB/g,'ị');
    str1= str1.replace(/\\u1ECA/g,'Ị');
    // í �?



    str1= str1.replace(/\\u00F3/g,'ó');
    str1= str1.replace(/\\u00D3/g,'Ó');
    str1= str1.replace(/\\u00F2/g,'ò');
    str1= str1.replace(/\\u00D2/g,'Ò');
    str1= str1.replace(/\\u1ECF/g,'�?');
    str1= str1.replace(/\\u1ECE/g,'Ỏ');
    str1= str1.replace(/\\u00F5/g,'õ');
    str1= str1.replace(/\\u00D5/g,'Õ');
    str1= str1.replace(/\\u1ECD/g,'�?');
    str1= str1.replace(/\\u1ECC/g,'Ọ');
    // ó Ó




    str1= str1.replace(/\\u01A1/g,'ơ');
    str1= str1.replace(/\\u01A0/g,'Ơ');
    str1= str1.replace(/\\u1EDB/g,'ớ');
    str1= str1.replace(/\\u1EDA/g,'Ớ');
    //str1= str1.replace(/\\u1EDD/g,'�?');
    str1= str1.replace(/\\u1EDD/g,'ơ');//Sua tam 
    str1= str1.replace(/\\u1EDC/g,'Ờ');
    str1= str1.replace(/\\u1EDF/g,'ở');
    str1= str1.replace(/\\u1EDE/g,'Ở');
    str1= str1.replace(/\\u1EE1/g,'ỡ');
    str1= str1.replace(/\\u1EE0/g,'Ỡ');
    str1= str1.replace(/\\u1EE3/g,'ợ');
    str1= str1.replace(/\\u1EE2/g,'Ợ');
    // o+ O+



    str1= str1.replace(/\\u00F4/g,'ô');
    str1= str1.replace(/\\u00D4/g,'Ô');
    str1= str1.replace(/\\u1ED1/g,'ố');
    str1= str1.replace(/\\u1ED0/g,'�?');
    str1= str1.replace(/\\u1ED3/g,'ồ');
    str1= str1.replace(/\\u1ED2/g,'Ồ');
    str1= str1.replace(/\\u1ED5/g,'ổ');
    str1= str1.replace(/\\u1ED4/g,'Ổ');
    str1= str1.replace(/\\u1ED7/g,'ỗ');
    str1= str1.replace(/\\u1ED6/g,'Ỗ');
    str1= str1.replace(/\\u1ED9/g,'ộ');
    str1= str1.replace(/\\u1ED8/g,'Ộ');
    // ô Ô
   



    str1= str1.replace(/\\u00FA/g,'ú');
    str1= str1.replace(/\\u00DA/g,'Ú');
    str1= str1.replace(/\\u00F9/g,'ù');
    str1= str1.replace(/\\u00D9/g,'Ù');
    str1= str1.replace(/\\u1EE7/g,'ủ');
    str1= str1.replace(/\\u1EE6/g,'Ủ');
    str1= str1.replace(/\\u0169/g,'ũ');
    str1= str1.replace(/\\u0168/g,'Ũ');
    str1= str1.replace(/\\u1EE5/g,'ụ');
    str1= str1.replace(/\\u1EE4/g,'Ụ');
    // ú Ú
   



    str1= str1.replace(/\\u01B0/g,'ư');    
    str1= str1.replace(/\\u01AF/g,'ư');
    str1= str1.replace(/\\u1EE9/g,'ứ');
    str1= str1.replace(/\\u1EE8/g,'Ứ');
    str1= str1.replace(/\\u1EEB/g,'ừ');
    str1= str1.replace(/\\u1EEA/g,'Ừ');
    str1= str1.replace(/\\u1EED/g,'ử');
    str1= str1.replace(/\\u1EEC/g,'Ử');
    str1= str1.replace(/\\u1EEF/g,'ữ');
    str1= str1.replace(/\\u1EEE/g,'Ữ');
    str1= str1.replace(/\\u1EF1/g,'ự');
    str1= str1.replace(/\\u1EF0/g,'Ữ');
    // u+ U+
    //str1= str1.replace(/\\u0110/g,'�?');
    str1= str1.replace(/\\u0110/g,'đ');//Sua tam
    str1= str1.replace(/\\u0111/g,'đ');

    str1= str1.replace(/\\u00FD/g,'ý');
    str1= str1.replace(/\\u00DD/g,'�?');
    str1= str1.replace(/\\u1EF3/g,'ỳ');
    str1= str1.replace(/\\u1EF2/g,'Ỳ');
    str1= str1.replace(/\\u1EF7/g,'ỷ');
    str1= str1.replace(/\\u1EF6/g,'Ỷ');
    str1= str1.replace(/\\u1EF9/g,'ỹ');
    str1= str1.replace(/\\u1EF8/g,'ỹ');
    str1= str1.replace(/\\u1EF5/g,'ỵ');
    str1= str1.replace(/\\u1EF4/g,'Ỵ');
    // ư Ư


    return str1;

  }
  function UnicodeToCompound(str1)
  {
    str1= str1.replace(/\u00E1/g,'a\u0301');
    str1= str1.replace(/\u00C1/g,'A\u0301');
    str1= str1.replace(/\u00E0/g,'a\u0300');
    str1= str1.replace(/\u00C0/g,'A\u0300');
    str1= str1.replace(/\u1EA3/g,'a\u0309');
    str1= str1.replace(/\u1EA2/g,'A\u0309');
    str1= str1.replace(/\u00E3/g,'a\u0303');
    str1= str1.replace(/\u00C3/g,'A\u0303');
    str1= str1.replace(/\u1EA1/g,'a\u0323');
    str1= str1.replace(/\u1EA0/g,'A\u0323');
    //á �?

    str1= str1.replace(/\u0103/g,'a\u0306');
    str1= str1.replace(/\u0102/g,'A\u0306');
    str1= str1.replace(/\u1EAF/g,'a\u0306\u0301');
    str1= str1.replace(/\u1EAE/g,'A\u0306\u0301');
    str1= str1.replace(/\u1EB1/g,'a\u0306\u0300');
    str1= str1.replace(/\u1EB0/g,'A\u0306\u0300');
    str1= str1.replace(/\u1EB3/g,'a\u0306\u0309');
    str1= str1.replace(/\u1EB2/g,'A\u0306\u0309');
    str1= str1.replace(/\u1EB5/g,'a\u0306\u0303');
    str1= str1.replace(/\u1EB4/g,'A\u0306\u0303');
    str1= str1.replace(/\u1EB7/g,'a\u0306\u0323');
    str1= str1.replace(/\u1EB6/g,'A\u0306\u0323');
    //a+ A+ 



    str1= str1.replace(/\u00E2/g,'a\u0302');
    str1= str1.replace(/\u00C2/g,'A\u0302');
    str1= str1.replace(/\u1EA5/g,'a\u0302\u0301');
    str1= str1.replace(/\u1EA4/g,'A\u0302\u0301');
    str1= str1.replace(/\u1EA7/g,'a\u0302\u0300');
    str1= str1.replace(/\u1EA6/g,'A\u0302\u0300');
    str1= str1.replace(/\u1EA9/g,'a\u0302\u0309');
    str1= str1.replace(/\u1EA8/g,'A\u0302\u0309');
    str1= str1.replace(/\u1EAB/g,'a\u0302\u0303');
    str1= str1.replace(/\u1EAA/g,'A\u0302\u0303');
    str1= str1.replace(/\u1EAD/g,'a\u0302\u0323');
    str1= str1.replace(/\u1EAC/g,'A\u0302\u0323');
    // â Â 




    str1= str1.replace(/\u00E9/g,'e\u0301');
    str1= str1.replace(/\u00C9/g,'E\u0301');
    str1= str1.replace(/\u00E8/g,'e\u0300');
    str1= str1.replace(/\u00C8/g,'E\u0300');
    str1= str1.replace(/\u1EBB/g,'e\u0309');
    str1= str1.replace(/\u1EBA/g,'E\u0309');
    str1= str1.replace(/\u1EBD/g,'e\u0303');
    str1= str1.replace(/\u1EBC/g,'E\u0303');
    str1= str1.replace(/\u1EB9/g,'e\u0323');
    str1= str1.replace(/\u1EB8/g,'E\u0323');
    // é É 


    str1= str1.replace(/\u00EA/g,'e\u0302');
    str1= str1.replace(/\u00CA/g,'E\u0302');
    str1= str1.replace(/\u1EBF/g,'e\u0302\u0301');
    str1= str1.replace(/\u1EBE/g,'E\u0302\u0301');
    str1= str1.replace(/\u1EC1/g,'e\u0302\u0300');
    str1= str1.replace(/\u1EC0/g,'E\u0302\u0300');
    str1= str1.replace(/\u1EC3/g,'e\u0302\u0309');
    str1= str1.replace(/\u1EC2/g,'E\u0302\u0309');
    str1= str1.replace(/\u1EC5/g,'e\u0302\u0303');
    str1= str1.replace(/\u1EC4/g,'E\u0302\u0303');
    str1= str1.replace(/\u1EC7/g,'e\u0302\u0323');
    str1= str1.replace(/\u1EC6/g,'E\u0302\u0323');
    // ê Ê
   


    str1= str1.replace(/\u00ED/g,'i\u0301');
    str1= str1.replace(/\u00CD/g,'I\u0301');
    str1= str1.replace(/\u00EC/g,'i\u0300');
    str1= str1.replace(/\u00CC/g,'I\u0300');
    str1= str1.replace(/\u1EC9/g,'i\u0309');
    str1= str1.replace(/\u1EC8/g,'I\u0309');
    str1= str1.replace(/\u0129/g,'i\u0303');
    str1= str1.replace(/\u0128/g,'I\u0303');
    str1= str1.replace(/\u1ECB/g,'i\u0323');
    str1= str1.replace(/\u1ECA/g,'I\u0323');
    // í �?



    str1= str1.replace(/\u00F3/g,'o\u0301');
    str1= str1.replace(/\u00D3/g,'O\u0301');
    str1= str1.replace(/\u00F2/g,'o\u0300');
    str1= str1.replace(/\u00D2/g,'O\u0300');
    str1= str1.replace(/\u1ECF/g,'o\u0309');
    str1= str1.replace(/\u1ECE/g,'O\u0309');
    str1= str1.replace(/\u00F5/g,'o\u0303');
    str1= str1.replace(/\u00D5/g,'O\u0303');
    str1= str1.replace(/\u1ECD/g,'o\u0323');
    str1= str1.replace(/\u1ECC/g,'O\u0323');
    // ó Ó




    str1= str1.replace(/\u01A1/g,'o\u031B');
    str1= str1.replace(/\u01A0/g,'O\u031B');
    str1= str1.replace(/\u1EDB/g,'o\u031B\u0301');
    str1= str1.replace(/\u1EDA/g,'O\u031B\u0301');
    str1= str1.replace(/\u1EDD/g,'o\u031B\u0300');
    str1= str1.replace(/\u1EDC/g,'O\u031B\u0300');
    str1= str1.replace(/\u1EDF/g,'o\u031B\u0309');
    str1= str1.replace(/\u1EDE/g,'O\u031B\u0309');
    str1= str1.replace(/\u1EE1/g,'o\u031B\u0303');
    str1= str1.replace(/\u1EE0/g,'O\u031B\u0303');
    str1= str1.replace(/\u1EE3/g,'o\u031B\u0323');
    str1= str1.replace(/\u1EE2/g,'O\u031B\u0323');
    // o+ O+



    str1= str1.replace(/\u00F4/g,'o\u0302');
    str1= str1.replace(/\u00D4/g,'O\u0302');
    str1= str1.replace(/\u1ED1/g,'o\u0302\u0301');
    str1= str1.replace(/\u1ED0/g,'O\u0302\u0301');
    str1= str1.replace(/\u1ED3/g,'o\u0302\u0300');
    str1= str1.replace(/\u1ED2/g,'O\u0302\u0300');
    str1= str1.replace(/\u1ED5/g,'o\u0302\u0309');
    str1= str1.replace(/\u1ED4/g,'O\u0302\u0309');
    str1= str1.replace(/\u1ED7/g,'o\u0302\u0303');
    str1= str1.replace(/\u1ED6/g,'O\u0302\u0303');
    str1= str1.replace(/\u1ED9/g,'o\u0302\u0323');
    str1= str1.replace(/\u1ED8/g,'O\u0302\u0323');
    // ô Ô
   



    str1= str1.replace(/\u00FA/g,'u\u0301');
    str1= str1.replace(/\u00DA/g,'U\u0301');
    str1= str1.replace(/\u00F9/g,'u\u0300');
    str1= str1.replace(/\u00D9/g,'U\u0300');
    str1= str1.replace(/\u1EE7/g,'u\u0309');
    str1= str1.replace(/\u1EE6/g,'U\u0309');
    str1= str1.replace(/\u0169/g,'u\u0303');
    str1= str1.replace(/\u0168/g,'U\u0303');
    str1= str1.replace(/\u1EE5/g,'u\u0323');
    str1= str1.replace(/\u1EE4/g,'U\u0323');
    // ú Ú
   



    str1= str1.replace(/\u01B0/g,'u\u031B');
    str1= str1.replace(/\u01AF/g,'U\u031B');
    str1= str1.replace(/\u1EE9/g,'u\u031B\u0301');
    str1= str1.replace(/\u1EE8/g,'U\u031B\u0301');
    str1= str1.replace(/\u1EEB/g,'u\u031B\u0300');
    str1= str1.replace(/\u1EEA/g,'U\u031B\u0300');
    str1= str1.replace(/\u1EED/g,'u\u031B\u0309');
    str1= str1.replace(/\u1EEC/g,'U\u031B\u0309');
    str1= str1.replace(/\u1EEF/g,'u\u031B\u0303');
    str1= str1.replace(/\u1EEE/g,'U\u031B\u0303');
    str1= str1.replace(/\u1EF1/g,'u\u031B\u0323');
    str1= str1.replace(/\u1EF0/g,'U\u031B\u0323');
    // u+ U+


    str1= str1.replace(/\u00FD/g,'y\u0301');
    str1= str1.replace(/\u00DD/g,'Y\u0301');
    str1= str1.replace(/\u1EF3/g,'y\u0300');
    str1= str1.replace(/\u1EF2/g,'Y\u0300');
    str1= str1.replace(/\u1EF7/g,'y\u0309');
    str1= str1.replace(/\u1EF6/g,'Y\u0309');
    str1= str1.replace(/\u1EF9/g,'y\u0303');
    str1= str1.replace(/\u1EF8/g,'Y\u0303');
    str1= str1.replace(/\u1EF5/g,'y\u0323');
    str1= str1.replace(/\u1EF4/g,'Y\u0323');
    // ư Ư


    return str1;

  }
  function CompoundToUnicode(str1)
  {
    str1= str1.replace(/a\u0301/g,'\u00E1');
    str1= str1.replace(/A\u0301/g,'\u00C1');
    str1= str1.replace(/a\u0300/g,'\u00E0');
    str1= str1.replace(/A\u0300/g,'\u00C0');
    str1= str1.replace(/a\u0309/g,'\u1EA3');
    str1= str1.replace(/A\u0309/g,'\u1EA2');
    str1= str1.replace(/a\u0303/g,'\u00E3');
    str1= str1.replace(/A\u0303/g,'\u00C3');
    str1= str1.replace(/a\u0323/g,'\u1EA1');
    str1= str1.replace(/A\u0323/g,'\u1EA0');
    //á �? 


    str1= str1.replace(/a\u0306\u0301/g,'\u1EAF');
    str1= str1.replace(/A\u0306\u0301/g,'\u1EAE');
    str1= str1.replace(/a\u0306\u0300/g,'\u1EB1');
    str1= str1.replace(/A\u0306\u0300/g,'\u1EB0');
    str1= str1.replace(/a\u0306\u0309/g,'\u1EB3');
    str1= str1.replace(/A\u0306\u0309/g,'\u1EB2');
    str1= str1.replace(/a\u0306\u0303/g,'\u1EB5');
    str1= str1.replace(/A\u0306\u0303/g,'\u1EB4');
    str1= str1.replace(/a\u0306\u0323/g,'\u1EB7');
    str1= str1.replace(/A\u0306\u0323/g,'\u1EB6');
    str1= str1.replace(/a\u0306/g,'\u0103');
    str1= str1.replace(/A\u0306/g,'\u0102');
    //a+ A+


    str1= str1.replace(/a\u0302\u0301/g,'\u1EA5');
    str1= str1.replace(/A\u0302\u0301/g,'\u1EA4');
    str1= str1.replace(/a\u0302\u0300/g,'\u1EA7');
    str1= str1.replace(/A\u0302\u0300/g,'\u1EA6');
    str1= str1.replace(/a\u0302\u0309/g,'\u1EA9');
    str1= str1.replace(/A\u0302\u0309/g,'\u1EA8');
    str1= str1.replace(/a\u0302\u0303/g,'\u1EAB');
    str1= str1.replace(/A\u0302\u0303/g,'\u1EAA');
    str1= str1.replace(/a\u0302\u0323/g,'\u1EAD');
    str1= str1.replace(/A\u0302\u0323/g,'\u1EAC');
    str1= str1.replace(/a\u0302/g,'\u00E2');
    str1= str1.replace(/A\u0302/g,'\u00C2');
    // â Â 




    str1= str1.replace(/e\u0301/g,'\u00E9');
    str1= str1.replace(/E\u0301/g,'\u00C9');
    str1= str1.replace(/e\u0300/g,'\u00E8');
    str1= str1.replace(/E\u0300/g,'\u00C8');
    str1= str1.replace(/e\u0309/g,'\u1EBB');
    str1= str1.replace(/E\u0309/g,'\u1EBA');
    str1= str1.replace(/e\u0303/g,'\u1EBD');
    str1= str1.replace(/E\u0303/g,'\u1EBC');
    str1= str1.replace(/e\u0323/g,'\u1EB9');
    str1= str1.replace(/E\u0323/g,'\u1EB8');
    // é É



    str1= str1.replace(/e\u0302\u0301/g,'\u1EBF');
    str1= str1.replace(/E\u0302\u0301/g,'\u1EBE');
    str1= str1.replace(/e\u0302\u0300/g,'\u1EC1');
    str1= str1.replace(/E\u0302\u0300/g,'\u1EC0');
    str1= str1.replace(/e\u0302\u0309/g,'\u1EC3');
    str1= str1.replace(/E\u0302\u0309/g,'\u1EC2');
    str1= str1.replace(/e\u0302\u0303/g,'\u1EC5');
    str1= str1.replace(/E\u0302\u0303/g,'\u1EC4');
    str1= str1.replace(/e\u0302\u0323/g,'\u1EC7');
    str1= str1.replace(/E\u0302\u0323/g,'\u1EC6');
    str1= str1.replace(/e\u0302/g,'\u00EA');
    str1= str1.replace(/E\u0302/g,'\u00CA');
    // ê Ê


    str1= str1.replace(/i\u0301/g,'\u00ED');
    str1= str1.replace(/I\u0301/g,'\u00CD');
    str1= str1.replace(/i\u0300/g,'\u00EC');
    str1= str1.replace(/I\u0300/g,'\u00CC');
    str1= str1.replace(/i\u0309/g,'\u1EC9');
    str1= str1.replace(/I\u0309/g,'\u1EC8');
    str1= str1.replace(/i\u0303/g,'\u0129');
    str1= str1.replace(/I\u0303/g,'\u0128');
    str1= str1.replace(/i\u0323/g,'\u1ECB');
    str1= str1.replace(/I\u0323/g,'\u1ECA');
    // í �?




    str1= str1.replace(/o\u0301/g,'\u00F3');
    str1= str1.replace(/O\u0301/g,'\u00D3');
    str1= str1.replace(/o\u0300/g,'\u00F2');
    str1= str1.replace(/O\u0300/g,'\u00D2');
    str1= str1.replace(/o\u0309/g,'\u1ECF');
    str1= str1.replace(/O\u0309/g,'\u1ECE');
    str1= str1.replace(/o\u0303/g,'\u00F5');
    str1= str1.replace(/O\u0303/g,'\u00D5');
    str1= str1.replace(/o\u0323/g,'\u1ECD');
    str1= str1.replace(/O\u0323/g,'\u1ECC');
    // ó Ó




    str1= str1.replace(/o\u031B\u0301/g,'\u1EDB');
    str1= str1.replace(/O\u031B\u0301/g,'\u1EDA');
    str1= str1.replace(/o\u031B\u0300/g,'\u1EDD');
    str1= str1.replace(/O\u031B\u0300/g,'\u1EDC');
    str1= str1.replace(/o\u031B\u0309/g,'\u1EDF');
    str1= str1.replace(/O\u031B\u0309/g,'\u1EDE');
    str1= str1.replace(/o\u031B\u0303/g,'\u1EE1');
    str1= str1.replace(/O\u031B\u0303/g,'\u1EE0');
    str1= str1.replace(/o\u031B\u0323/g,'\u1EE3');
    str1= str1.replace(/O\u031B\u0323/g,'\u1EE2');
    str1= str1.replace(/o\u031B/g,'\u01A1');
    str1= str1.replace(/O\u031B/g,'\u01A0');
    // o+ O+



    str1= str1.replace(/o\u0302\u0301/g,'\u1ED1');
    str1= str1.replace(/O\u0302\u0301/g,'\u1ED0');
    str1= str1.replace(/o\u0302\u0300/g,'\u1ED3');
    str1= str1.replace(/O\u0302\u0300/g,'\u1ED2');
    str1= str1.replace(/o\u0302\u0309/g,'\u1ED5');
    str1= str1.replace(/O\u0302\u0309/g,'\u1ED4');
    str1= str1.replace(/o\u0302\u0303/g,'\u1ED7');
    str1= str1.replace(/O\u0302\u0303/g,'\u1ED6');
    str1= str1.replace(/o\u0302\u0323/g,'\u1ED9');
    str1= str1.replace(/O\u0302\u0323/g,'\u1ED8');
    str1= str1.replace(/o\u0302/g,'\u00F4');
    str1= str1.replace(/O\u0302/g,'\u00D4');
    // ô Ô




    str1= str1.replace(/u\u0301/g,'\u00FA');
    str1= str1.replace(/U\u0301/g,'\u00DA');
    str1= str1.replace(/u\u0300/g,'\u00F9');
    str1= str1.replace(/U\u0300/g,'\u00D9');
    str1= str1.replace(/u\u0309/g,'\u1EE7');
    str1= str1.replace(/U\u0309/g,'\u1EE6');
    str1= str1.replace(/u\u0303/g,'\u0169');
    str1= str1.replace(/U\u0303/g,'\u0168');
    str1= str1.replace(/u\u0323/g,'\u1EE5');
    str1= str1.replace(/U\u0323/g,'\u1EE4');
    // ú Ú




    str1= str1.replace(/u\u031B\u0301/g,'\u1EE9');
    str1= str1.replace(/U\u031B\u0301/g,'\u1EE8');
    str1= str1.replace(/u\u031B\u0300/g,'\u1EEB');
    str1= str1.replace(/U\u031B\u0300/g,'\u1EEA');
    str1= str1.replace(/u\u031B\u0309/g,'\u1EED');
    str1= str1.replace(/U\u031B\u0309/g,'\u1EEC');
    str1= str1.replace(/u\u031B\u0303/g,'\u1EEF');
    str1= str1.replace(/U\u031B\u0303/g,'\u1EEE');
    str1= str1.replace(/u\u031B\u0323/g,'\u1EF1');
    str1= str1.replace(/U\u031B\u0323/g,'\u1EF0');
    str1= str1.replace(/u\u031B/g,'\u01B0');
    str1= str1.replace(/U\u031B/g,'\u01AF');
    // u+ U+


    str1= str1.replace(/y\u0301/g,'\u00FD');
    str1= str1.replace(/Y\u0301/g,'\u00DD');
    str1= str1.replace(/y\u0300/g,'\u1EF3');
    str1= str1.replace(/Y\u0300/g,'\u1EF2');
    str1= str1.replace(/y\u0309/g,'\u1EF7');
    str1= str1.replace(/Y\u0309/g,'\u1EF6');
    str1= str1.replace(/y\u0303/g,'\u1EF9');
    str1= str1.replace(/Y\u0303/g,'\u1EF8');
    str1= str1.replace(/y\u0323/g,'\u1EF5');
    str1= str1.replace(/Y\u0323/g,'\u1EF4');
    // ư Ư 


    return str1;

  }





  function UnicodeToUTF8(str1)
  {
  str1= str1.replace(/\\u00E1/g,'Ă¡');
  str1= str1.replace(/\\u00C1/g,'Ă�?');
  str1= str1.replace(/\\u00E0/g,'Ă ');
  str1= str1.replace(/\\u00C0/g,'Ă€');
  str1= str1.replace(/\\u1EA3/g,'áº£');
  str1= str1.replace(/\\u1EA2/g,'áº¢');
  str1= str1.replace(/\\u00E3/g,'Ă£');
  str1= str1.replace(/\\u00C3/g,'Ăƒ');
  str1= str1.replace(/\\u1EA1/g,'áº¡');
  str1= str1.replace(/\\u1EA0/g,'áº ');
  //a A

  str1= str1.replace(/\\u0103/g,'Äƒ');
  str1= str1.replace(/\\u0102/g,'Ä‚');
  str1= str1.replace(/\\u1EAF/g,'áº¯');
  str1= str1.replace(/\\u1EAE/g,'áº®');
  str1= str1.replace(/\\u1EB1/g,'áº±');
  str1= str1.replace(/\\u1EB0/g,'áº°');
  str1= str1.replace(/\\u1EB3/g,'áº³');
  str1= str1.replace(/\\u1EB2/g,'áº²');
  str1= str1.replace(/\\u1EB5/g,'áºµ');
  str1= str1.replace(/\\u1EB4/g,'áº´');
  str1= str1.replace(/\\u1EB7/g,'áº·');
  str1= str1.replace(/\\u1EB6/g,'áº¶');
  //a+ A+ 

  str1= str1.replace(/\\u00E2/g,'Ă¢');
  str1= str1.replace(/\\u00C2/g,'Ă‚');
  str1= str1.replace(/\\u1EA5/g,'áº¥');
  str1= str1.replace(/\\u1EA4/g,'áº¤');
  str1= str1.replace(/\\u1EA7/g,'áº§');
  str1= str1.replace(/\\u1EA6/g,'áº¦');
  str1= str1.replace(/\\u1EA9/g,'áº©');
  str1= str1.replace(/\\u1EA8/g,'áº¨');
  str1= str1.replace(/\\u1EAB/g,'áº«');
  str1= str1.replace(/\\u1EAA/g,'áºª');
  str1= str1.replace(/\u1EAD/g,'áº­');
  str1= str1.replace(/\u1EAC/g,'áº¬');
  //a^ A^ 

  str1= str1.replace(/\\u00E9/g,'Ă©');
  str1= str1.replace(/\\u00C9/g,'Ă‰');
  str1= str1.replace(/\\u00E8/g,'Ă¨');
  str1= str1.replace(/\\u00C8/g,'Ăˆ');
  str1= str1.replace(/\\u1EBB/g,'áº»');
  str1= str1.replace(/\\u1EBA/g,'áºº');
  str1= str1.replace(/\\u1EBD/g,'áº½');
  str1= str1.replace(/\\u1EBC/g,'áº¼');
  str1= str1.replace(/\\u1EB9/g,'áº¹');
  str1= str1.replace(/\\u1EB8/g,'áº¸');
  //e E 

  str1= str1.replace(/\\u00EA/g,'Ăª');
  str1= str1.replace(/\\u00CA/g,'Ă');
  str1= str1.replace(/\\u1EBF/g,'áº¿');
  str1= str1.replace(/\\u1EBE/g,'áº¾');
  str1= str1.replace(/\\u1EC1/g,'á»�?');
  str1= str1.replace(/\\u1EC0/g,'á»€');
  str1= str1.replace(/\\u1EC3/g,'á»ƒ');
  str1= str1.replace(/\\u1EC2/g,'á»‚');
  str1= str1.replace(/\\u1EC5/g,'á»…');
  str1= str1.replace(/\\u1EC4/g,'á»„');
  str1= str1.replace(/\\u1EC7/g,'á»‡');
  str1= str1.replace(/\\u1EC6/g,'á»†');
  //e^ E^

  str1= str1.replace(/\\u00ED/g,'Ă­');
  str1= str1.replace(/\\u00CD/g,'Ă�?');
  str1= str1.replace(/\\u00EC/g,'Ă¬');
  str1= str1.replace(/\\u00CC/g,'ĂŒ');
  str1= str1.replace(/\\u1EC9/g,'á»‰');
  str1= str1.replace(/\\u1EC8/g,'á»ˆ');
  str1= str1.replace(/\\u0129/g,'Ä©');
  str1= str1.replace(/\\u0128/g,'Ä¨');
  str1= str1.replace(/\\u1ECB/g,'á»‹');
  str1= str1.replace(/\\u1ECA/g,'á»');
  //i I

  str1= str1.replace(/\\u00F3/g,'Ă³');
  str1= str1.replace(/\\u00D3/g,'Ă“');
  str1= str1.replace(/\\u00F2/g,'Ă²');
  str1= str1.replace(/\\u00D2/g,'Ă’');
  str1= str1.replace(/\\u1ECF/g,'á»�?');
  str1= str1.replace(/\\u1ECE/g,'á»');
  str1= str1.replace(/\\u00F5/g,'Ăµ');
  str1= str1.replace(/\\u00D5/g,'Ă•');
  str1= str1.replace(/\\u1ECD/g,'á»�?');
  str1= str1.replace(/\\u1ECC/g,'á»Œ');
  //o O

  str1= str1.replace(/\\u01A1/g,'Æ¡');
  str1= str1.replace(/\\u01A0/g,'Æ ');
  str1= str1.replace(/\\u1EDB/g,'á»›');
  str1= str1.replace(/\\u1EDA/g,'á»');
  str1= str1.replace(/\\u1EDD/g,'á»�?');
  str1= str1.replace(/\\u1EDC/g,'á»œ');
  str1= str1.replace(/\\u1EDF/g,'á»Ÿ');
  str1= str1.replace(/\\u1EDE/g,'á»');
  str1= str1.replace(/\\u1EE1/g,'á»¡');
  str1= str1.replace(/\\u1EE0/g,'á» ');
  str1= str1.replace(/\\u1EE3/g,'á»£');
  str1= str1.replace(/\\u1EE2/g,'á»¢');
  // o+ O+

  str1= str1.replace(/\\u00F4/g,'Ă´');
  str1= str1.replace(/\\u00D4/g,'Ă�?');
  str1= str1.replace(/\\u1ED1/g,'á»‘');
  str1= str1.replace(/\\u1ED0/g,'á»�?');
  str1= str1.replace(/\\u1ED3/g,'á»“');
  str1= str1.replace(/\\u1ED2/g,'á»’');
  str1= str1.replace(/\\u1ED5/g,'á»•');
  str1= str1.replace(/\\u1ED4/g,'á»�?');
  str1= str1.replace(/\\u1ED7/g,'á»—');
  str1= str1.replace(/\\u1ED6/g,'á»–');
  str1= str1.replace(/\\u1ED9/g,'á»™');
  str1= str1.replace(/\\u1ED8/g,'á»˜');
  // o^ O^

  str1= str1.replace(/\\u00FA/g,'Ăº');
  str1= str1.replace(/\\u00DA/g,'Ă');
  str1= str1.replace(/\\u00F9/g,'Ă¹');
  str1= str1.replace(/\\u00D9/g,'Ă™');
  str1= str1.replace(/\\u1EE7/g,'á»§');
  str1= str1.replace(/\\u1EE6/g,'á»¦');
  str1= str1.replace(/\\u0169/g,'Å©');
  str1= str1.replace(/\\u0168/g,'Å¨');
  str1= str1.replace(/\\u1EE5/g,'á»¥');
  str1= str1.replace(/\\u1EE4/g,'á»¤');
  // u U

  str1= str1.replace(/\\u01B0/g,'Æ°');
  str1= str1.replace(/\\u01AF/g,'Æ¯');
  str1= str1.replace(/\\u1EE9/g,'á»©');
  str1= str1.replace(/\\u1EE8/g,'á»¨');
  str1= str1.replace(/\\u1EEB/g,'á»«');
  str1= str1.replace(/\\u1EEA/g,'á»ª');
  str1= str1.replace(/\\u1EED/g,'á»­');
  str1= str1.replace(/\\u1EEC/g,'á»¬');
  str1= str1.replace(/\\u1EEF/g,'á»¯');
  str1= str1.replace(/\\u1EEE/g,'á»®');
  str1= str1.replace(/\\u1EF1/g,'á»±');
  str1= str1.replace(/\\u1EF0/g,'á»°');
  // u+ U+

  str1= str1.replace(/\\u00FD/g,'Ă½');
  str1= str1.replace(/\\u00DD/g,'Ă�?');
  str1= str1.replace(/\\u1EF3/g,'á»³');
  str1= str1.replace(/\\u1EF2/g,'á»²');
  str1= str1.replace(/\\u1EF7/g,'á»·');
  str1= str1.replace(/\\u1EF6/g,'á»¶');
  str1= str1.replace(/\\u1EF9/g,'á»¹');
  str1= str1.replace(/\\u1EF8/g,'á»¸');
  str1= str1.replace(/\\u1EF5/g,'á»µ');
  str1= str1.replace(/\\u1EF4/g,'á»´');
  // y Y

  return str1;
  }
  function LoadTen(ma, table, field){			
	 
	  if(isNull(ma)) return;
	   jQuery.ajax({
		   type: "POST",
		   url: "getMa.do",			  
		   data: "ma="+ma+"&"+
		   		 "table="+table,
		   success: function(msg){				  
			     if(msg == null ) return;			     
			     if(table == 'TCS_DM_KHOBAC'){
			    	 if(msg.ten != null) {
				    	 try {
				    		 document.forms[0].ten_kb.value = msg.ten;
				    	 }catch (e) {
				    		 document.forms[0].ten_shkb.value = msg.ten;
						 }
			    	 }
			    	 
			    	 
			     }
			     else if(table == 'TCS_DM_TAIKHOAN'){
			    	 if(msg.ten != null) {
				    	 if(field == 'tk_tnhien') {			    		
				    		 document.forms[0].ttk_tnhien.value = msg.ten;
				    	 }
				    	 else if(field == 'tk_no') {			    		
				    		 document.forms[0].ttk_no.value = msg.ten;
				    		 
				    	 }
				    	 else if(field == 'tk_co') {
				    		 document.forms[0].ttk_co.value = msg.ten;
				    	 } 
				    	 else if(field == 'tk_no_tg') {
				    		 document.forms[0].ttk_no_tg.value = msg.ten;
				    	 } 
				    	 else if(field == 'tk_co_tg') {
				    		 document.forms[0].ttk_co_tg.value = msg.ten;
				    	 }
				    	 else if(field == 'tk_ns') {
				    		 document.forms[0].ten_tk_ns.value = msg.ten; 
				    	 } else if(field == 'tai_khoan') {
				    		 document.forms[0].ten_tk_ns.value = msg.ten; 
				    	 }
				    	 else 
				    		 alert(1);
			    	 }
			    	 
			     }			    	 
			     else if(table == 'TCS_DM_TAIKHOAN_CT') {
			    	 if(msg.ten_tk != null)
			    		 document.forms[0].ttk_chitiet.value = msg.ten_tk;
			     }
		    	 else if(table == 'TCS_DM_DBHC') {		    		
			    	 if(msg.ten != null)
			    		 document.forms[0].ten_dbhc.value = msg.ten;
		    	 }
		    	 else if(table == 'TCS_DM_CQTHU') {
			    	 if(msg.ten != null)
			    		 document.forms[0].ten_cqthu.value = msg.ten;
		    	 }
		    	 else if(table == 'TCS_DM_DVSDNS'){
			    	 if(msg.ten != null)
			    		 document.forms[0].ten_dvsdns.value = msg.ten;
		    	 }
		    	 else if(table == 'TCS_DM_NGANHANG'){		    		 
			    	 if(msg.ten != null)
			    		 document.forms[0].ten_nh.value = msg.ten;
		    	 } else if(table == 'TCS_DM_CHUONG') {
		    		 if(msg.ten_chuong != null) 
		    			 document.forms[0].ten_chuong.value = msg.ten_chuong;
		    	 }else if(table == 'TCS_DM_NDKT') {
		    		 if(msg.ten != null) 
		    			 document.forms[0].ten_ndkt.value = msg.ten;
		    	 }else if(table == 'TCS_DM_CQQD') {
		    		 if(msg.ten != null) 
		    			 document.forms[0].ten_cqqd.value = msg.ten;
		    	 }
		    	 else if(table == 'TCS_DM_LHTHU') {
		    		 if(msg.ten_lh != null) 
		    			 document.forms[0].ten_lh.value = msg.ten_lh;
		    	 }
		    	 else if(table == 'TCS_CTU_HDR') {		    		
		    		 if(msg.ten != null) {
		    			 if(field == 'cq_thu') {			    		
		    				 document.forms[0].tcq_thu.value = msg.ten;
				    	 }
		    			 if(field == 'ma_dvsdns') {			    		
		    				 document.forms[0].ten_dvsdns.value = msg.ten;
				    	 }
		    		 }
		    			 
		    	 }
		   }
		 });		   
}
  function ReplaceAll(Source,stringToFind,stringToReplace){
	  
	  var temp = Source;
    
    if(temp != null && temp != ""){
      var index = -1;
      
      index = temp.indexOf(stringToFind);
      
      while(index != -1){
          temp = temp.replace(stringToFind,stringToReplace);  
          index = temp.indexOf(stringToFind);
      }
    }
    return temp;	 
	}
  var 	keyCode2;
function onKeydownHandler() {
	var tecla = window.event.keyCode;	
	var control = window.event.ctrlKey;
	var alt = window.event.altKey;
	var tipo=event.srcElement.type;
	if (alt) {
		switch (tecla) {		
	            // Alt-F4
	            case 115:  
					  event.keyCode=116;  		                 
	                  event.returnValue=false;
					  window.status = "Bạn không được ấn Alt-F4"; 						 
	                  break;
	      }
	}
	else
	{
		switch (event.keyCode) 
		{ 
			
			case 116 : // 'F5'
				event.returnValue = false; 
				event.keyCode = 0; 					
				window.status = "Bạn không được ấn F5"; 
				break;
			case 120:			
				keyCode2 = event.keyCode;
				findFocusDM(keyCode2);
			
				
		}
	} 
}
function onKeydownHandlerCQQD() {
	var tecla = window.event.keyCode;	
	var control = window.event.ctrlKey;
	var alt = window.event.altKey;
	var tipo=event.srcElement.type;
	if (alt) {
		switch (tecla) {		
	            // Alt-F4
	            case 115:  
					  event.keyCode=116;  		                 
	                  event.returnValue=false;
					  window.status = "Bạn không được ấn Alt-F4"; 						 
	                  break;
	      }
	}
	else
	{
		switch (event.keyCode) 
		{ 
			
			case 116 : // 'F5'
				event.returnValue = false; 
				event.keyCode = 0; 					
				window.status = "Bạn không được ấn F5"; 
				break;
			case 120:			
				keyCode2 = event.keyCode;
				findFocusCQQD(keyCode2);
			
				
		}
	} 
}

function findFocusDM(keyCode2) {	
	
	var w;
	var el;						
	var curElement = document.activeElement;
	var elementName = curElement.name;	
	
	if(elementName == 'shkb') {											
		if(keyCode2 == 120 ) {		
			if(!document.getElementById('shkb').readOnly) {
				javascript:newWindow650480('/common/search/SearchKhoBac.jsp?r_field1=shkb&r_field2=ten_kb','window3');				
				keyCode2 = 0;
			}
		}
	}	
	
	if(elementName == '') {											
		if(keyCode2 == 120 ) {		
			if(!document.getElementById('id_cq_thu').readOnly) {
				javascript:newWindow650480('/common/search/SearchCQThu.jsp?r_field1=cq_thu&r_field2=tcq_thu&r_field3='+document.forms[0].loai_thue.value,'window3');				
				keyCode2 = 0;
			}
		}
	}	
	if(elementName == 'ma_dbhc') {											
		if(keyCode2 == 120 ) {			
			if(!document.getElementById('id_ma_dbhc').readOnly) {
				javascript:newWindow650480('/common/search/SearchDiaban.jsp?r_field1=ma_dbhc&r_field2=ten_dbhc&r_field3=0','window3');		
				keyCode2 = 0;
			}
		}
	}	
	if(elementName == 'tk_no') {											
		if(keyCode2 == 120 ) {			
			if(!document.getElementById('id_tk_no').readOnly) {
				javascript:newWindow650480('/common/search/SearchTaiKhoan.jsp?r_field1=tk_no&r_field2=ttk_no','window3');		
				keyCode2 = 0;
			}
		}
	}	
	if(elementName == 'tk_co') {											
		if(keyCode2 == 120 ) {	
			if(!document.getElementById('id_tk_co').readOnly) {
				javascript:newWindow650480('/common/search/SearchTaiKhoan.jsp?r_field1=tk_co&r_field2=ttk_co','window3');		
				keyCode2 = 0;
			}
		}
	}
	if(elementName == 'lh_xnk') {											
		if(keyCode2 == 120 ) {		
			if(!document.getElementById('id_lh_xnk1').readOnly) {
				javascript:newWindow650480('/common/search/SearchLHXNK.jsp?r_field1=lh_xnk&r_field2=tlh_xnk','window3');			
				keyCode2 = 0;
			}
		}
	}
	if(elementName == 'ma_nh_a') {											
		if(keyCode1 == 120 ) {	
			if(!document.getElementById('id_ma_nh_a').readOnly) {
			    javascript:newWindow650480('/common/search/SearchNganHang.jsp?r_field1=ma_nh_a&r_field2=ten_nh_a','window3');
				keyCode1 = 0;
			}
		}
	}
	if(elementName == 'ma_nh_nntien') {											
		if(keyCode1 == 120 ) {	
			if(!document.getElementById('id_ma_nh_nntien').readOnly) {
				javascript:newWindow650480('/common/search/SearchNganHang.jsp?r_field1=ma_nh_nntien&r_field2=ten_nt_nntien','window3');
				keyCode1 = 0;
			}
		}
	}
	if(elementName == 'ma_dvsdns') {											
		if(keyCode1 == 120 ) {	
			if(!document.getElementById('id_ma_dvsdns').readOnly) {
				javascript:newWindow650480('/common/search/SearchDvsdNSach.jsp?r_field1=ma_dvsdns&r_field2=ten_dvsdns','window3');
				keyCode1 = 0;
			}
		}
	}
	
		
	
}
function findFocusCQQD(keyCode2) {	
	
	var w;
	var el;						
	var curElement = document.activeElement;
	var elementName = curElement.name;	
	
	if(elementName == 'shkb') {											
		if(keyCode2 == 120 ) {		
			if(!document.getElementById('shkb').readOnly) {
				javascript:newWindow650480('/common/search/SearchKhoBac.jsp?r_field1=shkb&r_field2=ten_shkb','window3');				
				keyCode2 = 0;
			}
		}
	}	
	
	if(elementName == 'ma_lh') {											
		if(keyCode2 == 120 ) {		
			if(!document.getElementById('ma_lh').readOnly) {
				javascript:newWindow650480('/common/search/SearchLHThu1.jsp?r_field1=ma_lh&r_field2=ten_lh','window3');				
				keyCode2 = 0;
			}
		}
	}	
	if(elementName == 'ma_dvsdns') {											
		if(keyCode2 == 120 ) {		
			if(!document.getElementById('ma_dvsdns').readOnly) {
				javascript:newWindow650480('/common/search/SearchDvsdNSach.jsp?r_field1=ma_dvsdns&r_field2=ten_dvsdns','window3');				
				keyCode2 = 0;
			}
		}
	}	
	
	
	if(elementName == 'ma_dbhc') {											
		if(keyCode2 == 120 ) {			
			if(!document.getElementById('ma_dbhc').readOnly) {
				javascript:newWindow650480('/common/search/SearchDiaban.jsp?r_field1=ma_dbhc&r_field2=ten_dbhc&r_field3=1','window3');		
				keyCode2 = 0;
			}
		}
	}	
	if(elementName == 'tk_ns') {											
		if(keyCode2 == 120 ) {			
			if(!document.getElementById('id_tk_ns').readOnly) {
				javascript:newWindow650480('/common/search/SearchTaiKhoan.jsp?r_field1=tk_ns&r_field2=ten_tk_ns','window3');		
				keyCode2 = 0;
			}
		}
	}	
	if(elementName == 'ma_chuong') {											
		if(keyCode2 == 120 ) {	
			if(!document.getElementById('ma_chuong').readOnly) {
				javascript:newWindow650480('/common/search/SearchMaChuong.jsp?r_field1=ma_chuong&r_field2=ten_chuong','window3');		
				keyCode2 = 0;
			}
		}
	}
	if(elementName == 'ma_ndkt') {											
		if(keyCode2 == 120 ) {		
			if(!document.getElementById('ma_ndkt').readOnly) {
				javascript:newWindow650480('/common/search/SearchNDKTe.jsp?r_field1=ma_ndkt&r_field2=ten_ndkt','window3');			
				keyCode2 = 0;
			}
		}
	}
	if(elementName == 'ma_nh_a') {											
		if(keyCode1 == 120 ) {	
			if(!document.getElementById('id_ma_nh_a').readOnly) {
			    javascript:newWindow650480('/common/search/SearchNganHang.jsp?r_field1=ma_nh_a&r_field2=ten_nh_a','window3');
				keyCode1 = 0;
			}
		}
	}
	if(elementName == 'ma_nh_nntien') {											
		if(keyCode1 == 120 ) {	
			if(!document.getElementById('id_ma_nh_nntien').readOnly) {
				javascript:newWindow650480('/common/search/SearchNganHang.jsp?r_field1=ma_nh_nntien&r_field2=ten_nt_nntien','window3');
				keyCode1 = 0;
			}
		}
	}
	if(elementName == 'ma_dvsdns') {											
		if(keyCode1 == 120 ) {	
			if(!document.getElementById('id_ma_dvsdns').readOnly) {
				javascript:newWindow650480('/common/search/SearchDvsdNSach.jsp?r_field1=ma_dvsdns&r_field2=ten_dvsdns','window3');
				keyCode1 = 0;
			}
		}
	}
	
		
	
}
function clickButton(e, buttonid, currentPageSv )
{  
  var evt = e ? e : window.event;  
  var bt = document.getElementById(buttonid);    
  if (bt){
      if (evt.keyCode == 13){   
    	    getCurrentPage(currentPageSv);            
      }        
  }   
}  
function textfocus(textfield)
{  
  textfield.style.backgroundColor="#ffffb5"
} 
function textlostfocus(textfield)
{  
  textfield.style.backgroundColor="#ffffff"
} 
function nextFocus(textfield)
{  
  if(event.keyCode==13) event.keyCode=9
}
function getCurrentPage(currentPageSv) {	
	var currentpage = document.forms[0].currentPage.value;
	var totalPage = document.forms[0].totalPages.value;	
	
	if(typeof(currentpage) == 'string') 
		currentpage = parseInt(currentpage);
	if(typeof(totalPage) == 'string')	
		totalPage = parseInt(totalPage);	
	if(typeof(currentPageSv) == 'string')	
		currentPageSv = parseInt(currentPageSv);	
	if(currentpage == currentPageSv) return;
	if(currentpage <= 0) {
		alert('Số trang không hợp lệ');
		document.forms[0].currentPage.focus();
		return;
	}
	if(currentpage > totalPage) {		
		alert('Số trang không hợp lệ');
		document.forms[0].currentPage.focus();
		return;
	}
	document.forms[0].__action.value="page";
    document.forms[0].pageStatus.value="enterPage";   
    document.forms[0].submit();
}
function validFormatDate(field) {
      var fieldId = field.id;
      if (!CheckDate(field)) {
          jQuery("#" + fieldId).val('');
          jQuery("#" + fieldId).addClass("ui-state-error");
          jQuery("#" + fieldId).focus();
      }
  }
  function convertCurrencyToNumber(currency,ma_nt){    
    if(ma_nt.toUpperCase()!='VND' && ma_nt != 177){        
      return parseFloat(currency.replace(/\,/gi, ''));
    }else{      
      return parseFloat(currency.replace(/\./gi, ''));
    }
  }
  function CurrencyFormatted(num,ma_nt){ 
    //if(num==null || num=='' || num == 'NAN')
    //  return 0;    
    if(num==null || num=='')
      numm = 0;
    num = num.toString().replace(/\$|\,/g,'');
    if(isNaN(num))
    num = "0";
    sign = (num == (num = Math.abs(num)));
    num = Math.floor(num*100+0.50000000001);
    cents = num%100;
    num = Math.floor(num/100).toString();
    if(cents<10)
    cents = "0" + cents;
    for (var i = 0; i < Math.floor((num.length-(1+i))/3); i++){
      if(ma_nt.toUpperCase()!='VND' && ma_nt != '177'){
        num = num.substring(0,num.length-(4*i+3))+','+
        num.substring(num.length-(4*i+3));
      }else{
        num = num.substring(0,num.length-(4*i+3))+'.'+
        num.substring(num.length-(4*i+3));        
      }
    }    
    if(ma_nt.toUpperCase()!='VND' && ma_nt != '177'){
      return (((sign)?'':'-')  + num + '.' + cents);
    }else{
      return (((sign)?'':'-')  + num );
    }
}
/*
*@create: thuongdt
*@create date: 21/02/2017
*@see: them moi ham format so tien dung chung cho ca ngoai te va VND
*/
function CurrencyFormatted2(num){ 
	var vreturn = '';
    if(num==null || num=='')
      numm = 0;
    num = num.toString().replace(/\$|\,/g,'');
    if(isNaN(num))
    num = "0";
    sign = (num == (num = Math.abs(num)));
    num = Math.floor(num*100+0.50000000001);	
    cents = num%100;
    num = Math.floor(num/100).toString();
    if(cents<10)
    cents = "0" + cents;
    for (var i = 0; i < Math.floor((num.length-(1+i))/3); i++){
        num = num.substring(0,num.length-(4*i+3))+'.'+
        num.substring(num.length-(4*i+3)); 
    } 
	vreturn = ''+num;
	if(cents != null && cents != '')
	 vreturn = num+','+cents;
	return vreturn;
}
function getCurrentPage1(currentPageSv) {	
	
	var currentpage = document.forms[0].currentPage.value;
	var totalPage = document.forms[0].totalPages.value;	
	
	
	if(typeof(currentpage) == 'string') 
		currentpage = parseInt(currentpage);
	if(typeof(totalPage) == 'string')	
		totalPage = parseInt(totalPage);
	if(typeof(currentPageSv)=='string')
		currentPageSv = parseInt(currentPageSv);	
	if(currentpage == currentPageSv) return;
	if(currentpage <= 0) {		
		document.forms[0].currentPage.focus();
		return;
	}
	if(currentpage > totalPage) {	
		document.forms[0].currentPage.focus();
		return;
	}
	document.forms[0].__action.value="page";
    document.forms[0].pageStatus.value="enterPage";   
    document.forms[0].submit();
}

var Utf8 = {
 
	// public method for url encoding
	encode : function (string) {
		string = string.replace(/\r\n/g,"\n");
		var utftext = "";
 
		for (var n = 0; n < string.length; n++) {
 
			var c = string.charCodeAt(n);
 
			if (c < 128) {
				utftext += String.fromCharCode(c);
			}
			else if((c > 127) && (c < 2048)) {
				utftext += String.fromCharCode((c >> 6) | 192);
				utftext += String.fromCharCode((c & 63) | 128);
			}
			else {
				utftext += String.fromCharCode((c >> 12) | 224);
				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
				utftext += String.fromCharCode((c & 63) | 128);
			}
 
		}
 
		return utftext;
	},
 
	// public method for url decoding
	decode : function (utftext) {
		var string = "";
		var i = 0;
		var c = c1 = c2 = 0;
 
		while ( i < utftext.length ) {
 
			c = utftext.charCodeAt(i);
 
			if (c < 128) {
				string += String.fromCharCode(c);
				i++;
			}
			else if((c > 191) && (c < 224)) {
				c2 = utftext.charCodeAt(i+1);
				string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
				i += 2;
			}
			else {
				c2 = utftext.charCodeAt(i+1);
				c3 = utftext.charCodeAt(i+2);
				string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
				i += 3;
			}
 
		}
 
		return string;
	}
  
}
